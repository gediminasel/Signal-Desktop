# Copyright 2020-2021 Signal Messenger, LLC
# SPDX-License-Identifier: AGPL-3.0-only

name: Benchmark
on:
  push:
    branches:
      - development
      - '[0-9]+.[0-9]+.x'
  pull_request:

jobs:
  linux:
    runs-on: ubuntu-latest
    if: ${{ github.repository == 'signalapp/Signal-Desktop-Private' }}

    steps:
    - name: Get system specs
      run: lsb_release -a
    - name: Get other system specs
      run: uname -a

    - name: Configure git to use HTTPS
      run: git config --global url."https://${{ secrets.AUTOMATED_GITHUB_PAT }}:x-oauth-basic@github.com".insteadOf ssh://git@github.com

    - name: Clone Desktop repo
      uses: actions/checkout@v2
    - name: Clone Mock-Server repo
      uses: actions/checkout@v2
      with:
        repository: 'signalapp/Mock-Signal-Server-Private'
        path: 'Mock-Server'
        ref: 'gamma'
        token: ${{ secrets.AUTOMATED_GITHUB_PAT }}

    - name: Setup node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16.9.1'
    - name: Install global dependencies
      run: npm install -g yarn@1.22.10

    - name: Install xvfb
      run: sudo apt-get install xvfb

    - name: Cache Desktop node_modules
      id: cache-desktop-modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock', 'patches/**') }}

    - name: Install Desktop node_modules
      if: steps.cache-desktop-modules.outputs.cache-hit != 'true'
      run: yarn install --frozen-lockfile

    - name: Install Mock-Server node_modules
      run: yarn install --frozen-lockfile
      working-directory: Mock-Server
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1

    - name: Build typescript
      run: yarn generate
    - name: Bundle
      run: yarn build:webpack

    - name: Copy CI configuration
      run: |
        cp -rf ./Mock-Server/config/local-development.json \
          ./config/local-development.json
        cp -rf ./config/local-development.json ./config/local-production.json

    - name: Setup hosts
      run: sudo echo "127.0.0.1 mock.signal.org" | sudo tee -a /etc/hosts

    - name: Run startup benchmarks
      run: |
        set -o pipefail
        rm -rf /tmp/mock
        xvfb-run --auto-servernum node Mock-Server/scripts/load-test.js \
          ./node_modules/.bin/electron . | tee benchmark-startup.log
      timeout-minutes: 10
      env:
        NODE_ENV: production
        RUN_COUNT: 10
        ELECTRON_ENABLE_STACK_DUMPING: on

    - name: Upload startup benchmark logs on failure
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: startup-logs
        path: /tmp/mock/logs

    - name: Run send benchmarks
      run: |
        set -o pipefail
        rm -rf /tmp/mock
        xvfb-run --auto-servernum node Mock-Server/scripts/send-test.js \
          ./node_modules/.bin/electron . | tee benchmark-send.log
      timeout-minutes: 10
      env:
        NODE_ENV: production
        RUN_COUNT: 100
        ELECTRON_ENABLE_STACK_DUMPING: on

    - name: Upload send benchmark logs on failure
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: send-logs
        path: /tmp/mock/logs

    - name: Run group send benchmarks
      run: |
        set -o pipefail
        rm -rf /tmp/mock
        xvfb-run --auto-servernum node \
          Mock-Server/scripts/group-send-test.js \
          ./node_modules/.bin/electron . | tee benchmark-group-send.log
      timeout-minutes: 10
      env:
        NODE_ENV: production
        RUN_COUNT: 100
        ELECTRON_ENABLE_STACK_DUMPING: on

    - name: Upload group send benchmark logs on failure
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: group-send-logs
        path: /tmp/mock/logs

    - name: Run conversation open benchmarks
      run: |
        set -o pipefail
        rm -rf /tmp/mock
        xvfb-run --auto-servernum node \
          Mock-Server/scripts/convo-open-test.js \
          ./node_modules/.bin/electron . | tee benchmark-convo-open.log
      timeout-minutes: 10
      env:
        NODE_ENV: production
        RUN_COUNT: 100
        ELECTRON_ENABLE_STACK_DUMPING: on

    - name: Upload conversation open benchmark logs on failure
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: convo-open-logs
        path: /tmp/mock/logs

    - name: Clone benchmark repo
      uses: actions/checkout@v2
      with:
        repository: 'signalapp/Signal-Desktop-Benchmarks-Private'
        path: 'benchmark-results'
        token: ${{ secrets.AUTOMATED_GITHUB_PAT }}

    - name: Push benchmark repo
      working-directory: benchmark-results
      run: |
        npm ci
        node ./bin/collect.js ../benchmark-startup.log data/startup.json
        node ./bin/collect.js ../benchmark-send.log data/send.json
        node ./bin/collect.js ../benchmark-group-send.log data/group-send.json
        node ./bin/collect.js ../benchmark-convo-open.log data/convo-open.json
        npm run build
        git config --global user.email "no-reply@signal.org"
        git config --global user.name "Signal Bot"
        git add .
        git commit --message "${GITHUB_REF} ${GITHUB_SHA}"
        git push --force origin main
