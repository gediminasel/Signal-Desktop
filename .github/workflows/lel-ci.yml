# Copyright 2020 Signal Messenger, LLC
# SPDX-License-Identifier: AGPL-3.0-only

name: lel-CI
on:
  release:
    types: [published]

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - run: lsb_release -a
    - run: uname -a
    - uses: actions/checkout@v4
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
    - name: Setup node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'
        cache: 'pnpm'
        cache-dependency-path: 'pnpm-lock.yaml'
    - name: Cache .electron-gyp
      uses: actions/cache@v4
      with:
        path: ~/.electron-gyp
        key: electron-gyp-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}

    # - name: Setup sccache
    #   uses: mozilla-actions/sccache-action@v0.0.7
    # - name: Restore sccache
    #   uses: actions/cache@v4
    #   with:
    #     path: ${{ env.SCCACHE_PATH }}
    #     key: sccache-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml', 'patches/**') }}

    - name: Restore cached .eslintcache and tsconfig.tsbuildinfo
      uses: actions/cache/restore@v4
      id: cache-lint
      with:
        path: |
          .eslintcache
          tsconfig.tsbuildinfo
        key: lint-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml', 'patches/**', '.eslintrc.js', '.eslint/**', 'tsconfig.json') }}

    - name: Install Desktop node_modules
      run: pnpm install
      env:
        # CC: sccache gcc
        # CXX: sccache g++
        # SCCACHE_GHA_ENABLED: "true"
        NPM_CONFIG_LOGLEVEL: verbose

    - run: pnpm run generate
    - run: pnpm run lint
    - run: pnpm run lint-deps
    # - run: pnpm run lint-license-comments

    - name: Check acknowledgments file is up to date
      run: pnpm run build:acknowledgments
      env:
        REQUIRE_SIGNAL_LIB_FILES: 1

    - run: git diff --exit-code

    - name: Update cached .eslintcache and tsconfig.tsbuildinfo
      uses: actions/cache/save@v4
      with:
        path: |
          .eslintcache
          tsconfig.tsbuildinfo
        key: ${{ steps.cache-lint.outputs.cache-primary-key }}

  linux:
    needs: lint
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - run: lsb_release -a
    - run: uname -a
    - uses: actions/checkout@v4
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
    - name: Setup node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'
        cache: 'pnpm'
        cache-dependency-path: 'pnpm-lock.yaml'
    - name: Cache .electron-gyp
      uses: actions/cache@v4
      with:
        path: ~/.electron-gyp
        key: electron-gyp-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
    
    - name: Install xvfb and libpulse0
      run: sudo apt-get install xvfb libpulse0 || (sudo apt-get update && sudo apt-get install xvfb libpulse0)

    # - name: Setup sccache
    #   uses: mozilla-actions/sccache-action@v0.0.7
    # - name: Restore sccache
    #   uses: actions/cache@v4
    #   with:
    #     path: ${{ env.SCCACHE_PATH }}
    #     key: sccache-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml', 'patches/**') }}

    - name: Install Desktop node_modules
      run: pnpm install
      env:
        # CC: sccache gcc
        # CXX: sccache g++
        # SCCACHE_GHA_ENABLED: "true"
        NPM_CONFIG_LOGLEVEL: verbose

    - run: pnpm run generate
    - run: pnpm run prepare-beta-build

    - name: Create bundle
      run: pnpm run build:esbuild:prod
    # - name: Create preload cache
    #   run: xvfb-run --auto-servernum pnpm run build:preload-cache
    #   continue-on-error: true
    #   env:
    #     ARTIFACTS_DIR: artifacts/linux

    - name: Build with packaging .deb file
      run: pnpm run build:release --publish=never
      env:
        # CC: sccache gcc
        # CXX: sccache g++
        # SCCACHE_GHA_ENABLED: "true"
        DISABLE_INSPECT_FUSE: on

    # - run: xvfb-run --auto-servernum pnpm run test-node

    # - name: Clone backup integration tests
    #   uses: actions/checkout@v4
    #   with:
    #     repository: 'signalapp/Signal-Message-Backup-Tests'
    #     ref: '2e22808478e08c72e11a7483900c9af6c9b1acf4'
    #     path: 'backup-integration-tests'

    # - run: xvfb-run --auto-servernum pnpm run test-electron
    #   timeout-minutes: 5
    #   env:
    #     ARTIFACTS_DIR: artifacts/linux
    #     LANG: en_US
    #     LANGUAGE: en_US
    #     BACKUP_INTEGRATION_DIR: 'backup-integration-tests/test-cases'
    #     WORKER_COUNT: 8
    # - run: xvfb-run --auto-servernum pnpm run test-release
    #   env:
    #     NODE_ENV: production

    - name: Upload artifacts
      id: upload-artifacts
      uses: actions/upload-artifact@v4
      with:
        name: deb-package
        path: release//signal-desktop*.deb

  windows:
    needs: lint
    runs-on: windows-2019
    timeout-minutes: 30

    env:
      BUILD_LOCATION: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Tools\\MSVC\\14.29.30133\\lib\\x86\\store\\references\\"
      SDK_LOCATION: "C:\\Program Files (x86)\\Windows Kits\\10\\UnionMetadata\\10.0.17134.0"

    steps:
    - run: systeminfo
    - run: git config --global core.autocrlf false
    - run: git config --global core.eol lf
    - uses: actions/checkout@v4
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
    - name: Setup node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'
        cache: 'pnpm'
        cache-dependency-path: 'pnpm-lock.yaml'
    - name: Cache .electron-gyp
      uses: actions/cache@v4
      with:
        path: ${{ env.SCCACHE_PATH }}\.electron-gyp
        key: electron-gyp-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}

    - run: pnpm install -g node-gyp@10.0.1

    - name: Install Desktop node_modules
      run: pnpm install
      env:
        CHILD_CONCURRENCY: 1
        NPM_CONFIG_LOGLEVEL: verbose

    - run: pnpm run generate
    - run: pnpm run test-node
    - run: copy package.json temp.json
    - run: del package.json
    - run: type temp.json | findstr /v certificateSubjectName | findstr /v certificateSha1 > package.json
    - run: pnpm run prepare-beta-build

    - name: Create bundle
      run: pnpm run build:esbuild:prod
    - name: Create preload cache
      run: pnpm run build:preload-cache
      env:
        ARTIFACTS_DIR: artifacts/win

    - name: Build with NSIS
      run: pnpm run build:release
      env:
        DISABLE_INSPECT_FUSE: on

    - run: pnpm run test-electron
      env:
        ARTIFACTS_DIR: artifacts/windows
      timeout-minutes: 5
    - run: pnpm run test-release
      env:
        SIGNAL_ENV: production

    - name: Upload artifacts
      id: upload-artifacts
      uses: actions/upload-artifact@v4
      with:
        name: installer-exe
        path: release//signal-desktop*.exe
