# Copyright 2020-2022 Signal Messenger, LLC
# SPDX-License-Identifier: AGPL-3.0-only

name: lel-CI
on:
  release:
    types: [published]

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - run: lsb_release -a
    - run: uname -a
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '18.17.1'
    - run: npm install -g yarn@1.22.10

    - name: Cache Desktop node_modules
      id: cache-desktop-modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock', 'patches/**') }}
    - name: Install Desktop node_modules
      if: steps.cache-desktop-modules.outputs.cache-hit != 'true'
      run: yarn install --frozen-lockfile
      env:
        NPM_CONFIG_LOGLEVEL: verbose

    - run: yarn generate
    - run: yarn lint
    - run: yarn lint-deps
    # - run: yarn lint-license-comments
    - run: git diff --exit-code

  linux:
    needs: lint
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - run: lsb_release -a
    - run: uname -a
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '18.17.1'
    - run: sudo apt-get install xvfb
    - run: npm install -g yarn@1.22.10

    - name: Cache Desktop node_modules
      id: cache-desktop-modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock', 'patches/**') }}
    - name: Install Desktop node_modules
      if: steps.cache-desktop-modules.outputs.cache-hit != 'true'
      run: yarn install --frozen-lockfile
      env:
        NPM_CONFIG_LOGLEVEL: verbose

    - run: yarn generate
    - run: yarn prepare-beta-build
    - name: Create bundle
      run: yarn build:esbuild:prod
    - run: yarn build:release -- --publish=never
      env:
        DISABLE_INSPECT_FUSE: on
    - run: xvfb-run --auto-servernum yarn test-node
    - run: xvfb-run --auto-servernum yarn test-electron
      timeout-minutes: 5
      env:
        LANG: en_US
        LANGUAGE: en_US
    - run: xvfb-run --auto-servernum yarn test-release
      env:
        NODE_ENV: production

    - name: Upload artifacts
      id: upload-artifacts
      uses: actions/upload-artifact@v3
      with:
        name: deb-package
        path: release//signal-desktop*.deb

  windows:
    needs: lint
    runs-on: windows-2019
    timeout-minutes: 30

    env:
      BUILD_LOCATION: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Tools\\MSVC\\14.29.30133\\lib\\x86\\store\\references\\"
      SDK_LOCATION: "C:\\Program Files (x86)\\Windows Kits\\10\\UnionMetadata\\10.0.17134.0"

    steps:
    - run: systeminfo
    - run: git config --global core.autocrlf false
    - run: git config --global core.eol lf
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '18.17.1'
    - run: npm install -g yarn@1.22.10
    
    # Set things up so @nodert-win10-rs4 dependencies build properly
    - run: dir "$env:BUILD_LOCATION"
    - run: dir "$env:SDK_LOCATION"
    - run: "copy \"$env:BUILD_LOCATION\\platform.winmd\" \"$env:SDK_LOCATION\""
    - run: dir "$env:SDK_LOCATION"

    - name: Cache Desktop node_modules
      id: cache-desktop-modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock', 'patches/**') }}
    - name: Install Desktop node_modules
      if: steps.cache-desktop-modules.outputs.cache-hit != 'true'
      run: yarn install --frozen-lockfile
      env:
        CHILD_CONCURRENCY: 1 
        NPM_CONFIG_LOGLEVEL: verbose

    - run: yarn generate
    - run: yarn test-node
    - run: copy package.json temp.json
    - run: del package.json
    - run: type temp.json | findstr /v certificateSubjectName | findstr /v certificateSha1 > package.json
    - run: yarn prepare-beta-build
    - run: yarn build
      env:
        DISABLE_INSPECT_FUSE: on
    - run: yarn test-electron
      timeout-minutes: 5
    - run: yarn test-release
      env:
        SIGNAL_ENV: production

    - name: Upload artifacts
      id: upload-artifacts
      uses: actions/upload-artifact@v3
      with:
        name: installer-exe
        path: release//signal-desktop*.exe
