[
  {
    "rule": "eval",
    "path": "components/mp3lameencoder/lib/Mp3LameEncoder.js",
    "line": "    return eval(funcstr);",
    "reasonCategory": "usageTrusted",
    "updated": "2018-09-18T19:19:27.699Z",
    "reasonDetail": "Part of a set of functions to implement C calls"
  },
  {
    "rule": "eval",
    "path": "components/mp3lameencoder/lib/Mp3LameEncoder.js",
    "line": "      func = eval('_' + ident); // explicit lookup",
    "reasonCategory": "usageTrusted",
    "updated": "2018-09-18T19:19:27.699Z",
    "reasonDetail": "Part of runtime library for C++ transpiled code"
  },
  {
    "rule": "jQuery-append(",
    "path": "components/mp3lameencoder/lib/Mp3LameEncoder.js",
    "line": "            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-19T18:13:29.628Z"
  },
  {
    "rule": "jQuery-globalEval(",
    "path": "components/mp3lameencoder/lib/Mp3LameEncoder.js",
    "line": "    globalEval(read(f));",
    "reasonCategory": "usageTrusted",
    "updated": "2018-09-18T19:19:27.699Z",
    "reasonDetail": "Part of system for loading dependencies"
  },
  {
    "rule": "jQuery-globalEval(",
    "path": "components/mp3lameencoder/lib/Mp3LameEncoder.js",
    "line": "function globalEval(x) {",
    "reasonCategory": "usageTrusted",
    "updated": "2018-09-18T19:19:27.699Z",
    "reasonDetail": "Part of system for loading dependencies"
  },
  {
    "rule": "jQuery-globalEval(",
    "path": "components/mp3lameencoder/lib/Mp3LameEncoder.js",
    "line": "    globalEval(Module['read'](f));",
    "reasonCategory": "usageTrusted",
    "updated": "2018-09-18T19:19:27.699Z",
    "reasonDetail": "Part of system for loading dependencies"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "components/mp3lameencoder/lib/Mp3LameEncoder.js",
    "line": "            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);",
    "reasonCategory": "usageTrusted",
    "updated": "2018-09-19T18:13:29.628Z",
    "reasonDetail": "Interacting with already-existing DOM nodes"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "components/mp3lameencoder/lib/Mp3LameEncoder.js",
    "line": "        canvas.parentNode.insertBefore(canvasContainer, canvas);",
    "reasonCategory": "usageTrusted",
    "updated": "2018-09-19T18:13:29.628Z",
    "reasonDetail": "Interacting with already-existing DOM nodes"
  },
  {
    "rule": "jQuery-load(",
    "path": "components/mp3lameencoder/lib/Mp3LameEncoder.js",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-15T00:16:19.197Z",
    "line": "  Module['load'] = function load(f) {"
  },
  {
    "rule": "jQuery-load(",
    "path": "components/mp3lameencoder/lib/Mp3LameEncoder.js",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-15T00:16:19.197Z",
    "line": "  Module['load'] = function load(f) {"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@design-systems/utils/dist/cjs/utils/focus-lock.js",
    "reasonCategory": "testCode",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@design-systems/utils/dist/esm/utils/focus-lock.js",
    "reasonCategory": "testCode",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@design-systems/utils/src/utils/focus-lock.tsx",
    "line": "  const trap = React.useRef<HTMLDivElement>(null);",
    "reasonCategory": "testCode",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/@discoveryjs/json-ext/dist/json-ext.js",
    "line": "    function append(array, elements) {",
    "reasonCategory": "falseMatch",
    "updated": "2021-04-05T20:48:36.065Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/@discoveryjs/json-ext/dist/json-ext.js",
    "line": "                        append(this.valueStack.value, JSON.parse('[' + fragment + ']'));",
    "reasonCategory": "falseMatch",
    "updated": "2021-04-05T20:48:36.065Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/@discoveryjs/json-ext/dist/json-ext.js",
    "line": "                        append(this.valueStack.value, JSON.parse('[' + fragment + ']'));",
    "reasonCategory": "falseMatch",
    "updated": "2021-04-05T20:48:36.065Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/@discoveryjs/json-ext/dist/json-ext.js",
    "line": "                    append(this.valueStack.value, JSON.parse(fragment));",
    "reasonCategory": "falseMatch",
    "updated": "2021-04-05T20:48:36.065Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/@discoveryjs/json-ext/src/parse-chunked.js",
    "line": "function append(array, elements) {",
    "reasonCategory": "falseMatch",
    "updated": "2021-04-05T20:48:36.065Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/@discoveryjs/json-ext/src/parse-chunked.js",
    "line": "                    append(this.valueStack.value, JSON.parse('[' + fragment + ']'));",
    "reasonCategory": "falseMatch",
    "updated": "2021-04-05T20:48:36.065Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/@discoveryjs/json-ext/src/parse-chunked.js",
    "line": "                    append(this.valueStack.value, JSON.parse('[' + fragment + ']'));",
    "reasonCategory": "falseMatch",
    "updated": "2021-04-05T20:48:36.065Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/@discoveryjs/json-ext/src/parse-chunked.js",
    "line": "                append(this.valueStack.value, JSON.parse(fragment));",
    "reasonCategory": "falseMatch",
    "updated": "2021-04-05T20:48:36.065Z"
  },
  {
    "rule": "React-createRef",
    "path": "node_modules/@indutny/frameless-titlebar/dist/index.es.js",
    "line": "    .map(() => createRef());",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-06T22:58:37.359Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@indutny/frameless-titlebar/dist/index.es.js",
    "line": "    const ref = useRef(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-06T22:58:37.359Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@indutny/frameless-titlebar/dist/index.es.js",
    "line": "    const ref = useRef();",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-06T22:58:37.359Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@indutny/frameless-titlebar/dist/index.es.js",
    "line": "    const activeMenus = useRef((_a = menu === null || menu === void 0 ? void 0 : menu.length) !== null && _a !== void 0 ? _a : 0);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-06T22:58:37.359Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@indutny/frameless-titlebar/dist/index.es.js",
    "line": "    const savedCallback = useRef(onClickAway);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-06T22:58:37.359Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@indutny/frameless-titlebar/dist/index.es.js",
    "line": "    const menuRef = useRef(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-06T22:58:37.359Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@indutny/frameless-titlebar/dist/index.es.js",
    "line": "    const scrollRef = useRef(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-06T22:58:37.359Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@indutny/frameless-titlebar/dist/index.es.js",
    "line": "    myRef = myRef !== null && myRef !== void 0 ? myRef : useRef(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-06T22:58:37.359Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@indutny/frameless-titlebar/dist/index.es.js",
    "line": "    const overflowRef = useRef(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-06T22:58:37.359Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@indutny/frameless-titlebar/dist/index.es.js",
    "line": "    const menuBar = useRef(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-06T22:58:37.359Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@indutny/frameless-titlebar/dist/index.es.js",
    "line": "    const ref = useRef(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-06T22:58:37.359Z"
  },
  {
    "rule": "React-createRef",
    "path": "node_modules/@indutny/frameless-titlebar/dist/index.js",
    "line": "    .map(() => React.createRef());",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-06T22:58:37.359Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@indutny/frameless-titlebar/dist/index.js",
    "line": "    const ref = React.useRef(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-06T22:58:37.359Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@indutny/frameless-titlebar/dist/index.js",
    "line": "    const ref = React.useRef();",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-06T22:58:37.359Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@indutny/frameless-titlebar/dist/index.js",
    "line": "    const activeMenus = React.useRef((_a = menu === null || menu === void 0 ? void 0 : menu.length) !== null && _a !== void 0 ? _a : 0);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-06T22:58:37.359Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@indutny/frameless-titlebar/dist/index.js",
    "line": "    const savedCallback = React.useRef(onClickAway);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-06T22:58:37.359Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@indutny/frameless-titlebar/dist/index.js",
    "line": "    const menuRef = React.useRef(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-06T22:58:37.359Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@indutny/frameless-titlebar/dist/index.js",
    "line": "    const scrollRef = React.useRef(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-06T22:58:37.359Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@indutny/frameless-titlebar/dist/index.js",
    "line": "    myRef = myRef !== null && myRef !== void 0 ? myRef : React.useRef(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-06T22:58:37.359Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@indutny/frameless-titlebar/dist/index.js",
    "line": "    const overflowRef = React.useRef(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-06T22:58:37.359Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@indutny/frameless-titlebar/dist/index.js",
    "line": "    const menuBar = React.useRef(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-06T22:58:37.359Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@indutny/frameless-titlebar/dist/index.js",
    "line": "    const ref = React.useRef(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-06T22:58:37.359Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/@jridgewell/source-map/dist/source-map.umd.js",
    "line": "        append(sources, resolvedSources);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/@jridgewell/source-map/dist/source-map.umd.js",
    "line": "        append(sourcesContent, map.sourcesContent || fillSourcesContent(resolvedSources.length));",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/@jridgewell/source-map/dist/source-map.umd.js",
    "line": "        append(names, map.names);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/@jridgewell/source-map/dist/source-map.umd.js",
    "line": "    function append(arr, other) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/@jridgewell/trace-mapping/dist/trace-mapping.umd.js",
    "line": "        append(sources, resolvedSources);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/@jridgewell/trace-mapping/dist/trace-mapping.umd.js",
    "line": "        append(names, map.names);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/@jridgewell/trace-mapping/dist/trace-mapping.umd.js",
    "line": "            append(sourcesContent, contents);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/@jridgewell/trace-mapping/dist/trace-mapping.umd.js",
    "line": "    function append(arr, other) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/@malept/flatpak-bundler/node_modules/debug/src/browser.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-11T21:58:24.827Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/@malept/flatpak-bundler/node_modules/debug/src/common.js",
    "line": "\tcreateDebug.enable(createDebug.load());",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-11T21:58:24.827Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/@malept/flatpak-bundler/node_modules/debug/src/node.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-11T21:58:24.827Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/@mdx-js/mdx/node_modules/@babel/plugin-syntax-object-rest-spread/node_modules/@babel/core/lib/vendor/import-meta-resolve.js",
    "line": "    load(arr) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/@mdx-js/mdx/node_modules/debug/src/browser.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/@mdx-js/mdx/node_modules/debug/src/common.js",
    "line": "\tcreateDebug.enable(createDebug.load());",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/@mdx-js/mdx/node_modules/debug/src/node.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/@mdx-js/mdx/node_modules/resolve/lib/async.js",
    "line": "        load(exts, x, loadAsFilePackage);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/@mdx-js/mdx/node_modules/resolve/lib/async.js",
    "line": "        function load(exts, x, loadPackage) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/@mdx-js/mdx/node_modules/resolve/lib/async.js",
    "line": "                    if (r) return load(",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/@mdx-js/mdx/node_modules/resolve/lib/async.js",
    "line": "                load(exts.slice(1), x, pkg);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/@mdx-js/mdx/node_modules/source-map/dist/source-map.debug.js",
    "line": "\t      this.prepend(aChunk[i]);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/@mdx-js/mdx/node_modules/source-map/dist/source-map.js",
    "line": "\t      this.prepend(aChunk[i]);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/@mdx-js/mdx/node_modules/source-map/dist/source-map.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/@mdx-js/mdx/node_modules/source-map/lib/source-node.js",
    "line": "      this.prepend(aChunk[i]);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/@mixer/parallel-prettier/node_modules/commander/index.js",
    "line": "        return helper.wrap(fullText, helpWidth - itemIndentWidth, termWidth + itemSeparatorWidth);",
    "reasonCategory": "falseMatch",
    "updated": "2022-03-22T19:29:46.099Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/@mixer/parallel-prettier/node_modules/commander/index.js",
    "line": "  wrap(str, width, indent, minColumnWidth = 40) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-03-22T19:29:46.099Z"
  },
  {
    "rule": "eval",
    "path": "node_modules/@protobufjs/inquire/index.js",
    "line": "        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval",
    "reasonCategory": "usageTrusted",
    "updated": "2018-09-18T19:19:27.699Z",
    "reasonDetail": "What's being eval'd is a static string"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@react-spring/animated/dist/react-spring-animated.cjs.dev.js",
    "line": "    const instanceRef = React.useRef(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-27T21:37:06.339Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@react-spring/animated/dist/react-spring-animated.cjs.dev.js",
    "line": "    const observerRef = React.useRef();",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-27T21:37:06.339Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@react-spring/animated/dist/react-spring-animated.cjs.prod.js",
    "line": "    const instanceRef = React.useRef(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-27T21:37:06.339Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@react-spring/animated/dist/react-spring-animated.cjs.prod.js",
    "line": "    const observerRef = React.useRef();",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-27T21:37:06.339Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@react-spring/animated/dist/react-spring-animated.esm.js",
    "line": "    const instanceRef = useRef(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-27T21:37:06.339Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@react-spring/animated/dist/react-spring-animated.esm.js",
    "line": "    const observerRef = useRef();",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-27T21:37:06.339Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@react-spring/core/dist/react-spring-core.cjs.dev.js",
    "line": "  const layoutId = React.useRef(0);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-27T21:37:06.339Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@react-spring/core/dist/react-spring-core.cjs.dev.js",
    "line": "  const ctrls = React.useRef([...state.ctrls]);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-27T21:37:06.339Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@react-spring/core/dist/react-spring-core.cjs.dev.js",
    "line": "  const usedTransitions = React.useRef(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-27T21:37:06.339Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@react-spring/core/dist/react-spring-core.cjs.dev.js",
    "line": "  const exitingTransitions = React.useRef(new Map());",
    "reasonCategory": "usageTrusted",
    "updated": "2022-01-12T23:16:33.623Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@react-spring/core/dist/react-spring-core.cjs.dev.js",
    "line": "  const forceChange = React.useRef(false);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-01-12T23:16:33.623Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@react-spring/core/dist/react-spring-core.cjs.prod.js",
    "line": "  const layoutId = React.useRef(0);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-27T21:37:06.339Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@react-spring/core/dist/react-spring-core.cjs.prod.js",
    "line": "  const ctrls = React.useRef([...state.ctrls]);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-27T21:37:06.339Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@react-spring/core/dist/react-spring-core.cjs.prod.js",
    "line": "  const usedTransitions = React.useRef(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-27T21:37:06.339Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@react-spring/core/dist/react-spring-core.cjs.prod.js",
    "line": "  const exitingTransitions = React.useRef(new Map());",
    "reasonCategory": "usageTrusted",
    "updated": "2022-01-12T23:16:33.623Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@react-spring/core/dist/react-spring-core.cjs.prod.js",
    "line": "  const forceChange = React.useRef(false);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-01-12T23:16:33.623Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@react-spring/core/dist/react-spring-core.esm.js",
    "line": "  const layoutId = useRef(0);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-27T21:37:06.339Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@react-spring/core/dist/react-spring-core.esm.js",
    "line": "  const ctrls = useRef([...state.ctrls]);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-27T21:37:06.339Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@react-spring/core/dist/react-spring-core.esm.js",
    "line": "  const usedTransitions = useRef(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-27T21:37:06.339Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@react-spring/core/dist/react-spring-core.esm.js",
    "line": "  const exitingTransitions = useRef(new Map());",
    "reasonCategory": "usageTrusted",
    "updated": "2022-01-12T23:16:33.623Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@react-spring/core/dist/react-spring-core.esm.js",
    "line": "  const forceChange = useRef(false);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-01-12T23:16:33.623Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@react-spring/shared/dist/react-spring-shared.cjs.dev.js",
    "line": "  const committed = React.useRef();",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-27T21:37:06.339Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@react-spring/shared/dist/react-spring-shared.cjs.dev.js",
    "line": "  const prevRef = React.useRef();",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-27T21:37:06.339Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@react-spring/shared/dist/react-spring-shared.cjs.dev.js",
    "line": "  const isMounted = React.useRef(false);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@react-spring/shared/dist/react-spring-shared.cjs.prod.js",
    "line": "  const committed = React.useRef();",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-27T21:37:06.339Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@react-spring/shared/dist/react-spring-shared.cjs.prod.js",
    "line": "  const prevRef = React.useRef();",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-27T21:37:06.339Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@react-spring/shared/dist/react-spring-shared.cjs.prod.js",
    "line": "  const isMounted = React.useRef(false);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@react-spring/shared/dist/react-spring-shared.esm.js",
    "line": "  const isMounted = useRef(false);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@react-spring/shared/dist/react-spring-shared.esm.js",
    "line": "  const committed = useRef();",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-27T21:37:06.339Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/@react-spring/shared/dist/react-spring-shared.esm.js",
    "line": "  const prevRef = useRef();",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-27T21:37:06.339Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/@sindresorhus/is/dist/index.js",
    "line": "        'innerHTML',",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-15T00:38:04.183Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/@sindresorhus/is/dist/source/index.js",
    "line": "        'innerHTML',",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-15T00:38:04.183Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/@sinonjs/commons/lib/deprecated.js",
    "line": " * Returns a string which can be supplied to `wrap()` to notify the user that a",
    "reasonCategory": "testCode",
    "updated": "2020-10-09T22:28:48.591Z",
    "reasonDetail": "Test code. Also a false match."
  },
  {
    "rule": "jQuery-before(",
    "path": "node_modules/@sinonjs/commons/lib/deprecated.test.js",
    "line": "            before(function() {",
    "reasonCategory": "testCode",
    "updated": "2020-10-09T22:28:48.591Z",
    "reasonDetail": "Test code. Also a false match."
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/@sinonjs/commons/lib/deprecated.test.js",
    "line": "            wrapped = deprecated.wrap(method, msg);",
    "reasonCategory": "testCode",
    "updated": "2020-10-09T22:28:48.591Z",
    "reasonDetail": "Test code. Also a false match."
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/@sinonjs/commons/lib/deprecated.test.js",
    "line": "                wrapped = deprecated.wrap(method, msg);",
    "reasonCategory": "testCode",
    "updated": "2020-10-09T22:28:48.591Z",
    "reasonDetail": "Test code. Also a false match."
  },
  {
    "rule": "eval",
    "path": "node_modules/@sinonjs/commons/lib/function-name.test.js",
    "line": "                fn = eval(\"(function*() {})\")().constructor;",
    "reasonCategory": "testCode",
    "updated": "2020-10-09T22:28:48.591Z"
  },
  {
    "rule": "jQuery-before(",
    "path": "node_modules/@sinonjs/commons/lib/global.test.js",
    "line": "    before(function() {",
    "reasonCategory": "testCode",
    "updated": "2020-10-09T22:28:48.591Z",
    "reasonDetail": "Test code. Also a false match."
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/@sinonjs/text-encoding/lib/encoding.js",
    "line": "        stream.prepend(bite);",
    "reasonCategory": "testCode",
    "updated": "2020-10-09T22:28:48.591Z",
    "reasonDetail": "Test code. Also a false match."
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/@sinonjs/text-encoding/lib/encoding.js",
    "line": "          stream.prepend(buffer);",
    "reasonCategory": "testCode",
    "updated": "2020-10-09T22:28:48.591Z",
    "reasonDetail": "Test code. Also a false match."
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/@sinonjs/text-encoding/lib/encoding.js",
    "line": "        stream.prepend([gb18030_second, bite]);",
    "reasonCategory": "testCode",
    "updated": "2020-10-09T22:28:48.591Z",
    "reasonDetail": "Test code. Also a false match."
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/@sinonjs/text-encoding/lib/encoding.js",
    "line": "          stream.prepend(bite);",
    "reasonCategory": "testCode",
    "updated": "2020-10-09T22:28:48.591Z",
    "reasonDetail": "Test code. Also a false match."
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/@sinonjs/text-encoding/lib/encoding.js",
    "line": "          stream.prepend(bite);",
    "reasonCategory": "testCode",
    "updated": "2020-10-09T22:28:48.591Z",
    "reasonDetail": "Test code. Also a false match."
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/@sinonjs/text-encoding/lib/encoding.js",
    "line": "          stream.prepend(bite);",
    "reasonCategory": "testCode",
    "updated": "2020-10-09T22:28:48.591Z",
    "reasonDetail": "Test code. Also a false match."
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/@sinonjs/text-encoding/lib/encoding.js",
    "line": "          stream.prepend(bite);",
    "reasonCategory": "testCode",
    "updated": "2020-10-09T22:28:48.591Z",
    "reasonDetail": "Test code. Also a false match."
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/@sinonjs/text-encoding/lib/encoding.js",
    "line": "        stream.prepend(bite);",
    "reasonCategory": "testCode",
    "updated": "2020-10-09T22:28:48.591Z",
    "reasonDetail": "Test code. Also a false match."
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/@sinonjs/text-encoding/lib/encoding.js",
    "line": "        stream.prepend([lead, bite]);",
    "reasonCategory": "testCode",
    "updated": "2020-10-09T22:28:48.591Z",
    "reasonDetail": "Test code. Also a false match."
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/@sinonjs/text-encoding/lib/encoding.js",
    "line": "        stream.prepend(code_point);",
    "reasonCategory": "testCode",
    "updated": "2020-10-09T22:28:48.591Z",
    "reasonDetail": "Test code. Also a false match."
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/@sinonjs/text-encoding/lib/encoding.js",
    "line": "        stream.prepend(code_point);",
    "reasonCategory": "testCode",
    "updated": "2020-10-09T22:28:48.591Z",
    "reasonDetail": "Test code. Also a false match."
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/@sinonjs/text-encoding/lib/encoding.js",
    "line": "        stream.prepend(code_point);",
    "reasonCategory": "testCode",
    "updated": "2020-10-09T22:28:48.591Z",
    "reasonDetail": "Test code. Also a false match."
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/@sinonjs/text-encoding/lib/encoding.js",
    "line": "        stream.prepend(code_point);",
    "reasonCategory": "testCode",
    "updated": "2020-10-09T22:28:48.591Z",
    "reasonDetail": "Test code. Also a false match."
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/@sinonjs/text-encoding/lib/encoding.js",
    "line": "          stream.prepend(bite);",
    "reasonCategory": "testCode",
    "updated": "2020-10-09T22:28:48.591Z",
    "reasonDetail": "Test code. Also a false match."
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/@sinonjs/text-encoding/lib/encoding.js",
    "line": "          stream.prepend(bite);",
    "reasonCategory": "testCode",
    "updated": "2020-10-09T22:28:48.591Z",
    "reasonDetail": "Test code. Also a false match."
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/@sinonjs/text-encoding/lib/encoding.js",
    "line": "        stream.prepend(convertCodeUnitToBytes(code_unit, utf16_be));",
    "reasonCategory": "testCode",
    "updated": "2020-10-09T22:28:48.591Z",
    "reasonDetail": "Test code. Also a false match."
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.cjs.js",
    "line": "  if (!element || !('innerHTML' in element)) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.cjs.js",
    "line": "  if (!element.innerHTML) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.cjs.js",
    "line": "  console.log(\"Open this URL in your browser\\n\\n\" + getPlaygroundUrl(element.innerHTML));",
    "reasonCategory": "testCode",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "DOM-outerHTML",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.cjs.js",
    "line": "  if (!('outerHTML' in dom)) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "DOM-outerHTML",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.cjs.js",
    "line": "  return maxLength !== undefined && dom.outerHTML.length > maxLength ? debugContent.slice(0, maxLength) + \"...\" : debugContent;",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.cjs.js",
    "line": "      return _regeneratorRuntime__default[\"default\"].wrap(function _callee2$(_context2) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.cjs.js",
    "line": "                return _regeneratorRuntime__default[\"default\"].wrap(function _callee$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.cjs.js",
    "line": "    return _regeneratorRuntime__default[\"default\"].wrap(function _callee$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.cjs.js",
    "line": "      return _regeneratorRuntime__default[\"default\"].wrap(function _callee2$(_context2) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.cjs.js",
    "line": "                return _regeneratorRuntime__default[\"default\"].wrap(function _callee$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.cjs.js",
    "line": "    return _regeneratorRuntime__default[\"default\"].wrap(function _callee$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.esm.js",
    "line": "  if (!element || !('innerHTML' in element)) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.esm.js",
    "line": "  if (!element.innerHTML) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.esm.js",
    "line": "  console.log(\"Open this URL in your browser\\n\\n\" + getPlaygroundUrl(element.innerHTML));",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "DOM-outerHTML",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.esm.js",
    "line": "  if (!('outerHTML' in dom)) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "DOM-outerHTML",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.esm.js",
    "line": "  return maxLength !== undefined && dom.outerHTML.length > maxLength ? debugContent.slice(0, maxLength) + \"...\" : debugContent;",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.esm.js",
    "line": "      return _regeneratorRuntime.wrap(function _callee2$(_context2) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.esm.js",
    "line": "                return _regeneratorRuntime.wrap(function _callee$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.esm.js",
    "line": "    return _regeneratorRuntime.wrap(function _callee$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.esm.js",
    "line": "      return _regeneratorRuntime.wrap(function _callee2$(_context2) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.esm.js",
    "line": "                return _regeneratorRuntime.wrap(function _callee$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.esm.js",
    "line": "    return _regeneratorRuntime.wrap(function _callee$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.umd.js",
    "line": "    if (!element || !('innerHTML' in element)) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.umd.js",
    "line": "    if (!element.innerHTML) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.umd.js",
    "line": "    console.log(\"Open this URL in your browser\\n\\n\" + getPlaygroundUrl(element.innerHTML));",
    "reasonCategory": "testCode",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "DOM-outerHTML",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.umd.js",
    "line": "    if (!('outerHTML' in dom)) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "DOM-outerHTML",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.umd.js",
    "line": "    return maxLength !== undefined && dom.outerHTML.length > maxLength ? debugContent.slice(0, maxLength) + \"...\" : debugContent;",
    "reasonCategory": "testCode",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.umd.js",
    "line": "        return regenerator.wrap(function _callee2$(_context2) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.umd.js",
    "line": "                  return regenerator.wrap(function _callee$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.umd.js",
    "line": "      return regenerator.wrap(function _callee$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.umd.js",
    "line": "      function wrap(innerFn, outerFn, self, tryLocsList) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.umd.js",
    "line": "        var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.umd.js",
    "line": "        return regenerator.wrap(function _callee2$(_context2) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.umd.js",
    "line": "                  return regenerator.wrap(function _callee$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.umd.js",
    "line": "      return regenerator.wrap(function _callee$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.umd.min.js",
    "reasonCategory": "testCode",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "DOM-outerHTML",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.umd.min.js",
    "reasonCategory": "testCode",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.umd.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/@testing-library/dom/dist/@testing-library/dom.umd.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "DOM-outerHTML",
    "path": "node_modules/@testing-library/dom/dist/pretty-dom.js",
    "line": "  if (!('outerHTML' in dom)) {",
    "reasonCategory": "testCode",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "DOM-outerHTML",
    "path": "node_modules/@testing-library/dom/dist/pretty-dom.js",
    "line": "  return maxLength !== undefined && dom.outerHTML.length > maxLength ? `${debugContent.slice(0, maxLength)}...` : debugContent;",
    "reasonCategory": "testCode",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/@testing-library/dom/dist/screen.js",
    "line": "  if (!element || !('innerHTML' in element)) {",
    "reasonCategory": "testCode",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/@testing-library/dom/dist/screen.js",
    "line": "  if (!element.innerHTML) {",
    "reasonCategory": "testCode",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/@testing-library/dom/dist/screen.js",
    "line": "  console.log(`Open this URL in your browser\\n\\n${getPlaygroundUrl(element.innerHTML)}`);",
    "reasonCategory": "testCode",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/@testing-library/jest-dom/dist/to-be-empty-dom-element.js",
    "line": "      return [this.utils.matcherHint(`${this.isNot ? '.not' : ''}.toBeEmptyDOMElement`, 'element', ''), '', 'Received:', `  ${this.utils.printReceived(element.innerHTML)}`].join('\\n');",
    "reasonCategory": "testCode",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/@testing-library/jest-dom/dist/to-be-empty.js",
    "line": "    pass: element.innerHTML === '',",
    "reasonCategory": "testCode",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/@testing-library/jest-dom/dist/to-be-empty.js",
    "line": "      return [this.utils.matcherHint(`${this.isNot ? '.not' : ''}.toBeEmpty`, 'element', ''), '', 'Received:', `  ${this.utils.printReceived(element.innerHTML)}`].join('\\n');",
    "reasonCategory": "testCode",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/@testing-library/jest-dom/dist/to-contain-html.js",
    "line": "  div.innerHTML = htmlText;",
    "reasonCategory": "testCode",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/@testing-library/jest-dom/dist/to-contain-html.js",
    "line": "  return div.innerHTML;",
    "reasonCategory": "testCode",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "DOM-outerHTML",
    "path": "node_modules/@testing-library/jest-dom/dist/to-contain-html.js",
    "line": "    pass: container.outerHTML.includes(getNormalizedHtml(container, htmlText)),",
    "reasonCategory": "testCode",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/@testing-library/jest-dom/node_modules/regenerator-runtime/runtime.js",
    "line": "  function wrap(innerFn, outerFn, self, tryLocsList) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/@testing-library/jest-dom/node_modules/regenerator-runtime/runtime.js",
    "line": "      wrap(innerFn, outerFn, self, tryLocsList),",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/@testing-library/user-event/dist/select-options.js",
    "line": "      const matchingOption = allOptions.find(o => o.value === val || o.innerHTML === val);",
    "reasonCategory": "testCode",
    "updated": "2022-06-23T23:21:04.555Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/@yarnpkg/lockfile/index.js",
    "reasonCategory": "falseMatch",
    "updated": "2019-07-31T00:19:18.696Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/@yarnpkg/lockfile/index.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2019-07-31T00:19:18.696Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/@yarnpkg/lockfile/index.js",
    "line": "exports.enable(load());",
    "reasonCategory": "falseMatch",
    "updated": "2019-07-31T00:19:18.696Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/@yarnpkg/lockfile/index.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2019-07-31T00:19:18.696Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/@yarnpkg/lockfile/index.js",
    "line": "exports.enable(load());",
    "reasonCategory": "falseMatch",
    "updated": "2019-07-31T00:19:18.696Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/acorn/dist/acorn.js",
    "line": "  // $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)",
    "reasonCategory": "exampleCode",
    "updated": "2022-07-26T23:41:36.800Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/agent-base/node_modules/debug/src/browser.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-11T21:58:24.827Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/agent-base/node_modules/debug/src/common.js",
    "line": "\tcreateDebug.enable(createDebug.load());",
    "reasonCategory": "usageTrusted",
    "updated": "2022-02-11T21:58:24.827Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/agent-base/node_modules/debug/src/node.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-11T21:58:24.827Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/agentkeepalive/node_modules/debug/src/browser.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-04-08T07:10:10.677Z",
    "reasonDetail": "node-gyp dependency"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/agentkeepalive/node_modules/debug/src/common.js",
    "line": "\tcreateDebug.enable(createDebug.load());",
    "reasonCategory": "falseMatch",
    "updated": "2022-04-08T07:10:10.677Z",
    "reasonDetail": "node-gyp dependency"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/agentkeepalive/node_modules/debug/src/node.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-04-08T07:10:10.677Z",
    "reasonDetail": "node-gyp dependency"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/asar/node_modules/commander/index.js",
    "line": "          desc.push('  ' + pad(arg.name, width) + '  ' + wrap(argsDescription[arg.name], descriptionWidth, width + 4));",
    "reasonCategory": "falseMatch",
    "updated": "2021-11-13T01:24:25.496Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/asar/node_modules/commander/index.js",
    "line": "function wrap(str, width, indent) {",
    "reasonCategory": "falseMatch",
    "updated": "2021-11-13T01:24:25.496Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/asar/node_modules/commander/index.js",
    "line": "  return wrap(str, width, indent);",
    "reasonCategory": "falseMatch",
    "updated": "2021-11-13T01:24:25.496Z"
  },
  {
    "rule": "jQuery-insertAfter(",
    "path": "node_modules/ast-types/lib/path.js",
    "line": "    Pp.insertAfter = function insertAfter() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/ast-types/lib/path.js",
    "line": "    Pp.insertBefore = function insertBefore() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "jQuery-insertAfter(",
    "path": "node_modules/async/dist/async.js",
    "line": "    if (this.tail) this.insertAfter(this.tail, node);",
    "reasonCategory": "falseMatch",
    "updated": "2021-12-11T02:14:15.457Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/async/dist/async.js",
    "line": "    if (this.head) this.insertBefore(this.head, node);",
    "reasonCategory": "falseMatch",
    "updated": "2021-12-11T02:14:15.457Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/async/dist/async.js",
    "line": "                q._tasks.insertBefore(nextNode, item);",
    "reasonCategory": "falseMatch",
    "updated": "2021-12-11T02:14:15.457Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/async/dist/async.js",
    "line": "function wrap(defer) {",
    "reasonCategory": "falseMatch",
    "updated": "2021-12-11T02:14:15.457Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/async/dist/async.js",
    "line": "var setImmediate$1 = wrap(_defer);",
    "reasonCategory": "falseMatch",
    "updated": "2021-12-11T02:14:15.457Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/async/dist/async.js",
    "line": "var nextTick = wrap(_defer$1);",
    "reasonCategory": "falseMatch",
    "updated": "2021-12-11T02:14:15.457Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/async/dist/async.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2021-12-11T02:14:15.457Z"
  },
  {
    "rule": "jQuery-insertAfter(",
    "path": "node_modules/async/dist/async.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2021-12-11T02:14:15.457Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/async/dist/async.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2021-12-11T02:14:15.457Z"
  },
  {
    "rule": "jQuery-insertAfter(",
    "path": "node_modules/async/internal/DoublyLinkedList.js",
    "line": "    if (this.tail) this.insertAfter(this.tail, node);else setInitial(this, node);",
    "reasonCategory": "falseMatch",
    "updated": "2021-12-11T02:14:15.457Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/async/internal/DoublyLinkedList.js",
    "line": "    if (this.head) this.insertBefore(this.head, node);else setInitial(this, node);",
    "reasonCategory": "falseMatch",
    "updated": "2021-12-11T02:14:15.457Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/async/internal/setImmediate.js",
    "line": "function wrap(defer) {",
    "reasonCategory": "falseMatch",
    "updated": "2021-12-11T02:14:15.457Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/async/internal/setImmediate.js",
    "line": "exports.default = wrap(_defer);",
    "reasonCategory": "falseMatch",
    "updated": "2021-12-11T02:14:15.457Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/async/priorityQueue.js",
    "line": "                q._tasks.insertBefore(nextNode, item);",
    "reasonCategory": "falseMatch",
    "updated": "2021-12-11T02:14:15.457Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/axe-core/axe.js",
    "line": "      style.innerHTML = usePointer ? '* { pointer-events: all }' : '* { visibility: visible }';",
    "reasonCategory": "usageTrusted",
    "updated": "2021-04-13T00:52:21.453Z"
  },
  {
    "rule": "DOM-outerHTML",
    "path": "node_modules/axe-core/axe.js",
    "line": "      var source = element.outerHTML;",
    "reasonCategory": "usageTrusted",
    "updated": "2021-04-13T00:52:21.453Z"
  },
  {
    "rule": "jQuery-after(",
    "path": "node_modules/axe-core/axe.js",
    "line": "        var afterResults = check4.after(beforeResults, option);",
    "reasonCategory": "falseMatch",
    "updated": "2021-04-13T00:52:21.453Z"
  },
  {
    "rule": "jQuery-after(",
    "path": "node_modules/axe-core/axe.js",
    "line": "        value: function after(results, options) {",
    "reasonCategory": "falseMatch",
    "updated": "2021-04-13T00:52:21.453Z"
  },
  {
    "rule": "jQuery-after(",
    "path": "node_modules/axe-core/axe.js",
    "line": "            return rule3.after(ruleResult, options);",
    "reasonCategory": "falseMatch",
    "updated": "2021-04-13T00:52:21.453Z"
  },
  {
    "rule": "jQuery-after(",
    "path": "node_modules/axe-core/axe.js",
    "line": "            results = audit3.after(results, options);",
    "reasonCategory": "falseMatch",
    "updated": "2021-04-13T00:52:21.453Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/axe-core/axe.js",
    "line": "    function load(audit3) {",
    "reasonCategory": "falseMatch",
    "updated": "2021-04-13T00:52:21.453Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/axe-core/axe.min.js",
    "reasonCategory": "usageTrusted",
    "updated": "2021-04-13T17:31:15.352Z"
  },
  {
    "rule": "DOM-outerHTML",
    "path": "node_modules/axe-core/axe.min.js",
    "reasonCategory": "usageTrusted",
    "updated": "2021-04-13T17:31:15.352Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/axe-core/axe.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2021-04-13T17:31:15.352Z"
  },
  {
    "rule": "jQuery-after(",
    "path": "node_modules/axe-core/axe.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2021-04-13T17:31:15.352Z"
  },
  {
    "rule": "jQuery-after(",
    "path": "node_modules/axe-core/lib/core/base/audit.js",
    "line": "\tafter(results, options) {",
    "reasonCategory": "falseMatch",
    "updated": "2021-04-13T00:52:21.453Z"
  },
  {
    "rule": "jQuery-after(",
    "path": "node_modules/axe-core/lib/core/base/audit.js",
    "line": "\t\t\treturn rule.after(ruleResult, options);",
    "reasonCategory": "falseMatch",
    "updated": "2021-04-13T00:52:21.453Z"
  },
  {
    "rule": "jQuery-after(",
    "path": "node_modules/axe-core/lib/core/base/rule.js",
    "line": "\t\tvar afterResults = check.after(beforeResults, option);",
    "reasonCategory": "falseMatch",
    "updated": "2021-04-13T00:52:21.453Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/axe-core/lib/core/public/load.js",
    "line": "function load(audit) {",
    "reasonCategory": "falseMatch",
    "updated": "2021-04-13T00:52:21.453Z"
  },
  {
    "rule": "jQuery-after(",
    "path": "node_modules/axe-core/lib/core/public/run-rules.js",
    "line": "\t\t\t\tresults = audit.after(results, options);",
    "reasonCategory": "falseMatch",
    "updated": "2021-04-13T00:52:21.453Z"
  },
  {
    "rule": "DOM-outerHTML",
    "path": "node_modules/axe-core/lib/core/utils/dq-element.js",
    "line": "\tvar source = element.outerHTML;",
    "reasonCategory": "usageTrusted",
    "updated": "2021-04-13T00:52:21.453Z"
  },
  {
    "rule": "DOM-outerHTML",
    "path": "node_modules/axe-core/lib/core/utils/dq-element.js",
    "line": " * grab the source (outerHTML) and offer an array for storing frame paths",
    "reasonCategory": "usageTrusted",
    "updated": "2021-04-13T00:52:21.453Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/axe-core/lib/core/utils/pollyfills.js",
    "line": "\tstyle.innerHTML = usePointer",
    "reasonCategory": "usageTrusted",
    "updated": "2021-04-13T17:31:15.352Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/axe-core/lib/core/utils/valid-langs.js",
    "line": "const str = document.querySelector('pre').innerHTML;",
    "reasonCategory": "usageTrusted",
    "updated": "2021-04-13T17:31:15.352Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/backbone/backbone-min.js",
    "reasonCategory": "usageTrusted",
    "updated": "2020-09-11T17:24:56.124Z",
    "reasonDetail": "Used inside a Backbone view to populate this.$el"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/backbone/backbone-min.js",
    "reasonCategory": "usageTrusted",
    "updated": "2018-09-19T18:13:29.628Z",
    "reasonDetail": "Part of backbone's browser history API"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/backbone/backbone.js",
    "line": "    // If `this.el` is a string, pass it through `$()`, take the first",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-19T21:59:32.770Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/backbone/backbone.js",
    "line": "      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);",
    "reasonCategory": "ruleNeeded",
    "updated": "2018-09-19T21:59:32.770Z",
    "reasonDetail": "Need a rule for setElement, which contains this"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/backbone/backbone.js",
    "line": "        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;",
    "reasonCategory": "usageTrusted",
    "updated": "2018-09-19T18:13:29.628Z",
    "reasonDetail": "Part of backbone's browser history API"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/big-integer/BigInteger.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/bl/BufferList.js",
    "line": "    this.append(buf)",
    "reasonCategory": "falseMatch",
    "updated": "2021-01-20T22:39:55.418Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/bl/BufferList.js",
    "line": "    copy.append(this._bufs[i])",
    "reasonCategory": "falseMatch",
    "updated": "2021-01-20T22:39:55.418Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/bl/BufferList.js",
    "line": "      this.append(buf[i])",
    "reasonCategory": "falseMatch",
    "updated": "2021-01-20T22:39:55.418Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/bl/BufferList.js",
    "line": "      this.append(buf._bufs[i])",
    "reasonCategory": "falseMatch",
    "updated": "2021-01-20T22:39:55.418Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/blob-util/dist/blob-util.cjs.js",
    "line": "            builder.append(parts[i]);",
    "reasonCategory": "falseMatch",
    "updated": "2021-07-14T23:12:47.258Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/blob-util/dist/blob-util.es.js",
    "line": "            builder.append(parts[i]);",
    "reasonCategory": "falseMatch",
    "updated": "2021-07-14T23:12:47.258Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/blob-util/dist/blob-util.js",
    "line": "                builder.append(parts[i]);",
    "reasonCategory": "falseMatch",
    "updated": "2021-07-14T23:12:47.258Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/blob-util/dist/blob-util.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-19T18:13:29.628Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/c8/lib/report.js",
    "line": "        await converter.load()",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/c8/node_modules/istanbul-reports/lib/html/annotator.js",
    "line": "            text.wrap(",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/c8/node_modules/istanbul-reports/lib/html/annotator.js",
    "line": "            text.wrap(",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/c8/node_modules/istanbul-reports/lib/html/annotator.js",
    "line": "                        text.wrap(",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/c8/node_modules/istanbul-reports/lib/html/insertion-text.js",
    "line": "    wrap(startPos, startText, endPos, endText, consumeBlanks) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/c8/node_modules/istanbul-reports/lib/html/insertion-text.js",
    "line": "        this.wrap(0, startText, this.originalLength(), endText);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/cacheable-lookup/source/index.js",
    "line": "\t\t].map(promise => wrap(promise)));",
    "reasonCategory": "falseMatch",
    "updated": "2021-10-06T15:40:12.124Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/caching-transform/index.js",
    "line": "function wrap(opts) {",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-19T18:13:29.628Z"
  },
  {
    "rule": "eval",
    "path": "node_modules/config/lib/config.js",
    "line": "      configObject = VisionmediaYaml.eval(util.stripYamlComments(content));",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-15T00:38:04.183Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/config/lib/config.js",
    "line": "      configObject = Yaml.load(content);",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-15T00:38:04.183Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/copy-text-to-clipboard/index.js",
    "line": "\tdocument.body.append(element);",
    "reasonCategory": "falseMatch",
    "updated": "2019-12-11T01:10:06.091Z"
  },
  {
    "rule": "thenify-multiArgs",
    "path": "node_modules/cpy/node_modules/path-type/node_modules/pify/index.js",
    "line": "\t\t\t\tif (opts.multiArgs) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "thenify-multiArgs",
    "path": "node_modules/cpy/node_modules/path-type/node_modules/pify/index.js",
    "line": "\t\t\t\tif (opts.multiArgs) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "thenify-multiArgs",
    "path": "node_modules/cpy/node_modules/pify/index.js",
    "line": "\t\tif (options.multiArgs) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/debug/src/browser.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch|",
    "updated": "2020-04-30T22:35:27.860Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/debug/src/common.js",
    "line": "\tcreateDebug.enable(createDebug.load());",
    "reasonCategory": "falseMatch|",
    "updated": "2020-04-30T22:35:27.860Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/debug/src/node.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch|",
    "updated": "2020-04-30T22:35:27.860Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/del/node_modules/picomatch/lib/parse.js",
    "line": "    if (tok.value || tok.output) append(tok);",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-14T16:45:31.703Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/del/node_modules/picomatch/lib/parse.js",
    "line": "      append({ value });",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-14T16:45:31.703Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/del/node_modules/picomatch/lib/parse.js",
    "line": "      append({ value });",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-14T16:45:31.703Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/del/node_modules/picomatch/lib/parse.js",
    "line": "      append({ value });",
    "reasonCategory": "falseMatch|exampleCode|otherUtilityCode|regexMatchedSafeCode|notExercisedByOurApp|ruleNeeded|usageTrusted",
    "updated": "2022-02-14T16:45:31.703Z"
  },
  {
    "rule": "eval",
    "path": "node_modules/depd/index.js",
    "line": "  var deprecatedfn = eval('(function (' + args + ') {\\n' +",
    "reasonCategory": "usageTrusted",
    "updated": "2018-09-18T19:19:27.699Z",
    "reasonDetail": "What's being eval'd is a static string, with one variable: args. Args is of the form arg1, arg2, generated programmatically."
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/detect-port/node_modules/debug/src/browser.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch|",
    "updated": "2020-04-30T22:35:27.860Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/detect-port/node_modules/debug/src/browser.js",
    "line": "exports.enable(load());",
    "reasonCategory": "falseMatch|",
    "updated": "2020-04-30T22:35:27.860Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/detect-port/node_modules/debug/src/node.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch|",
    "updated": "2020-04-30T22:35:27.860Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/detect-port/node_modules/debug/src/node.js",
    "line": "exports.enable(load());",
    "reasonCategory": "falseMatch|",
    "updated": "2020-04-30T22:35:27.860Z"
  },
  {
    "rule": "jQuery-insertAfter(",
    "path": "node_modules/dom-helpers/cjs/insertAfter.js",
    "line": "function insertAfter(node, refNode) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/dom-helpers/cjs/insertAfter.js",
    "line": "      refNode.parentNode.insertBefore(node, refNode.nextSibling);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/dom-helpers/cjs/prepend.js",
    "line": "      parent.insertBefore(node, parent.firstElementChild);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/dom-helpers/cjs/prepend.js",
    "line": "function prepend(node, parent) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "jQuery-insertAfter(",
    "path": "node_modules/dom-helpers/esm/insertAfter.js",
    "line": "export default function insertAfter(node, refNode) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/dom-helpers/esm/insertAfter.js",
    "line": "      refNode.parentNode.insertBefore(node, refNode.nextSibling);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/dom-helpers/esm/prepend.js",
    "line": "      parent.insertBefore(node, parent.firstElementChild);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/dom-helpers/esm/prepend.js",
    "line": "export default function prepend(node, parent) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/duplexer3/index.js",
    "line": "    readable = (new stream.Readable(options)).wrap(readable);",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-19T18:13:29.628Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/duplexify/index.js",
    "line": "  return new (stream.Readable)({objectMode:true, highWaterMark:16}).wrap(rs)",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-19T18:13:29.628Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/electron-notarize/node_modules/debug/src/browser.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-11T21:58:24.827Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/electron-notarize/node_modules/debug/src/common.js",
    "line": "\tcreateDebug.enable(createDebug.load());",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-11T21:58:24.827Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/electron-notarize/node_modules/debug/src/node.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-11T21:58:24.827Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/element-resize-detector/dist/element-resize-detector.js",
    "line": "            div.innerHTML = \"<!--[if gt IE \" + (++v) + \"]><i></i><![endif]-->\";",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/element-resize-detector/dist/element-resize-detector.js",
    "line": "            styleElement.innerHTML = style;",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/element-resize-detector/dist/element-resize-detector.js",
    "line": "        document.body.insertBefore(container, document.body.firstChild);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/element-resize-detector/dist/element-resize-detector.min.js",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/element-resize-detector/dist/element-resize-detector.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/element-resize-detector/src/browser-detector.js",
    "line": "            div.innerHTML = \"<!--[if gt IE \" + (++v) + \"]><i></i><![endif]-->\";",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/element-resize-detector/src/detection-strategy/scroll.js",
    "line": "            styleElement.innerHTML = style;",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/element-resize-detector/src/detection-strategy/scroll.js",
    "line": "        document.body.insertBefore(container, document.body.firstChild);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/enquirer/lib/prompts/autocomplete.js",
    "line": "    return this.append(ch);",
    "reasonCategory": "falseMatch",
    "updated": "2020-08-26T00:10:28.628Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/enquirer/lib/prompts/autocomplete.js",
    "line": "    return this.options.multiple ? super.space(ch) : this.append(ch);",
    "reasonCategory": "falseMatch",
    "updated": "2020-08-26T00:10:28.628Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/enquirer/lib/prompts/autocomplete.js",
    "line": "  append(ch) {",
    "reasonCategory": "falseMatch",
    "updated": "2020-08-26T00:10:28.628Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/enquirer/lib/prompts/autocomplete.js",
    "line": "    return this.append(ch);",
    "reasonCategory": "falseMatch",
    "updated": "2020-08-26T00:10:28.628Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/enquirer/lib/prompts/editable.js",
    "line": "  append(char, key) {",
    "reasonCategory": "falseMatch",
    "updated": "2020-08-26T00:10:28.628Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/enquirer/lib/prompts/editable.js",
    "line": "    return this.focused.editable ? this.append(char) : super.space();",
    "reasonCategory": "falseMatch",
    "updated": "2020-08-26T00:10:28.628Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/enquirer/lib/prompts/editable.js",
    "line": "    return this.focused.editable ? this.append(char) : super.number(char);",
    "reasonCategory": "falseMatch",
    "updated": "2020-08-26T00:10:28.628Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/enquirer/lib/prompts/form.js",
    "line": "    return !!char && this.append(char);",
    "reasonCategory": "falseMatch",
    "updated": "2020-08-26T00:10:28.628Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/enquirer/lib/prompts/form.js",
    "line": "  append(char) {",
    "reasonCategory": "falseMatch",
    "updated": "2020-08-26T00:10:28.628Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/enquirer/lib/prompts/snippet.js",
    "line": "      this.append(ch, key);",
    "reasonCategory": "falseMatch",
    "updated": "2020-08-26T00:10:28.628Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/enquirer/lib/prompts/snippet.js",
    "line": "  append(ch, key) {",
    "reasonCategory": "falseMatch",
    "updated": "2020-08-26T00:10:28.628Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/enquirer/lib/types/number.js",
    "line": "  append(ch) {",
    "reasonCategory": "falseMatch",
    "updated": "2020-08-26T00:10:28.628Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/enquirer/lib/types/number.js",
    "line": "    return super.append(ch);",
    "reasonCategory": "falseMatch",
    "updated": "2020-08-26T00:10:28.628Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/enquirer/lib/types/number.js",
    "line": "    return super.append(ch);",
    "reasonCategory": "falseMatch",
    "updated": "2020-08-26T00:10:28.628Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/enquirer/lib/types/string.js",
    "line": "        return this.append('\\n', key);",
    "reasonCategory": "falseMatch",
    "updated": "2020-08-26T00:10:28.628Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/enquirer/lib/types/string.js",
    "line": "    this.append(ch);",
    "reasonCategory": "falseMatch",
    "updated": "2020-08-26T00:10:28.628Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/enquirer/lib/types/string.js",
    "line": "  append(ch) {",
    "reasonCategory": "falseMatch",
    "updated": "2020-08-26T00:10:28.628Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/enquirer/lib/types/string.js",
    "line": "    this.append(str);",
    "reasonCategory": "falseMatch",
    "updated": "2020-08-26T00:10:28.628Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/envinfo/dist/envinfo.js",
    "reasonCategory": "falseMatch",
    "updated": "2021-04-05T20:48:36.065Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/espree/node_modules/acorn/dist/acorn.js",
    "line": "  // $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "React-ref",
    "path": "node_modules/esquery/dist/esquery.esm.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2020-08-26T00:10:28.628Z",
    "reasonDetail": "isn't react"
  },
  {
    "rule": "React-ref",
    "path": "node_modules/esquery/dist/esquery.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2020-08-26T00:10:28.628Z",
    "reasonDetail": "isn't react"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/expand-range/node_modules/fill-range/index.js",
    "line": "      return wrap([origA, origB], sep, opts);",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-19T18:13:29.628Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/expand-range/node_modules/fill-range/index.js",
    "line": "    return wrap(arr, sep, opts);",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-19T18:13:29.628Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/expand-range/node_modules/fill-range/index.js",
    "line": "function wrap(arr, sep, opts) {",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-19T18:13:29.628Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/extglob/node_modules/debug/src/browser.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch|",
    "updated": "2020-04-30T22:35:27.860Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/extglob/node_modules/debug/src/browser.js",
    "line": "exports.enable(load());",
    "reasonCategory": "falseMatch|",
    "updated": "2020-04-30T22:35:27.860Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/extglob/node_modules/debug/src/node.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch|",
    "updated": "2020-04-30T22:35:27.860Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/extglob/node_modules/debug/src/node.js",
    "line": "exports.enable(load());",
    "reasonCategory": "falseMatch|",
    "updated": "2020-04-30T22:35:27.860Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/fabric/dist/fabric.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2021-12-01T01:13:59.892Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/file-entry-cache/cache.js",
    "line": "    var cache = flatCache.load( cacheId, _path );",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-15T00:38:04.183Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/filelist/index.js",
    "line": "    wrap(ARRAY_METHODS[i]);",
    "reasonCategory": "falseMatch",
    "updated": "2021-01-21T16:16:34.352Z"
  },
  {
    "rule": "thenify-multiArgs",
    "path": "node_modules/find-cache-dir/node_modules/pify/index.js",
    "line": "\t\tif (options.multiArgs) {",
    "reasonCategory": "falseMatch",
    "updated": "2020-08-25T00:30:50.619Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/flat-cache/cache.js",
    "line": "    me.load( fName, dir );",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-15T00:38:04.183Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/flat-cache/cache.js",
    "line": "    obj.load( docId, cacheDir );",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-15T00:38:04.183Z"
  },
  {
    "rule": "React-findDOMNode",
    "path": "node_modules/focus-trap-react/dist/focus-trap-react.js",
    "line": "        var focusTrapElementDOMNodes = this.focusTrapElements.map( // NOTE: `findDOMNode()` does not support CSS selectors; it'll just return",
    "reasonCategory": "exampleCode",
    "updated": "2021-10-01T23:53:26.107Z"
  },
  {
    "rule": "React-findDOMNode",
    "path": "node_modules/focus-trap-react/src/focus-trap-react.js",
    "line": "        // NOTE: `findDOMNode()` does not support CSS selectors; it'll just return",
    "reasonCategory": "exampleCode",
    "updated": "2021-10-01T23:53:26.107Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/form-data/lib/form_data.js",
    "line": "  append(header);",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-19T18:13:29.628Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/form-data/lib/form_data.js",
    "line": "  append(footer);",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-19T18:13:29.628Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/form-data/lib/form_data.js",
    "line": "  append(value);",
    "reasonCategory": "falseMatch",
    "updated": "2020-09-11T17:24:56.124Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/fuse.js/dist/fuse.basic.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2022-03-31T19:50:28.622Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/fuse.js/dist/fuse.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2022-03-31T19:50:28.622Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/get-uri/node_modules/debug/src/browser.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-11T21:58:24.827Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/get-uri/node_modules/debug/src/common.js",
    "line": "\tcreateDebug.enable(createDebug.load());",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-11T21:58:24.827Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/get-uri/node_modules/debug/src/node.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-11T21:58:24.827Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/global-dirs/index.js",
    "line": "\t// Homebrew special case: `$(brew --prefix)/lib/node_modules/npm/npmrc`",
    "reasonCategory": "exampleCode",
    "updated": "2021-11-13T01:24:25.496Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/google-libphonenumber/dist/libphonenumber.js",
    "reasonCategory": "notExercisedByOurApp",
    "updated": "2021-02-16T19:08:17.452Z",
    "reasonDetail": "Debug capabilities"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/google-libphonenumber/dist/libphonenumber.js",
    "line": "goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse=function(a,b){if(goog.dom.safe.isInnerHtmlCleanupRecursive_())for(;a.lastChild;)a.removeChild(a.lastChild);a.innerHTML=goog.html.SafeHtml.unwrapTrustedHTML(b)};",
    "reasonCategory": "notExercisedByOurApp",
    "updated": "2021-02-16T19:08:17.452Z",
    "reasonDetail": "Debug capabilities"
  },
  {
    "rule": "DOM-outerHTML",
    "path": "node_modules/google-libphonenumber/dist/libphonenumber.js",
    "reasonCategory": "usageTrusted",
    "updated": "2021-02-16T19:08:17.452Z",
    "reasonDetail": "Escapes HTML, HTML comes from a constant"
  },
  {
    "rule": "eval",
    "path": "node_modules/google-libphonenumber/dist/libphonenumber.js",
    "reasonCategory": "notExercisedByOurApp",
    "updated": "2021-02-16T19:08:17.452Z",
    "reasonDetail": "Transpilation logic"
  },
  {
    "rule": "eval",
    "path": "node_modules/google-libphonenumber/dist/libphonenumber.js",
    "reasonCategory": "notExercisedByOurApp",
    "updated": "2021-02-16T19:08:17.452Z",
    "reasonDetail": "Used to load dependencies; parent function loadModuleFromSource_ is used in one place only."
  },
  {
    "rule": "eval",
    "path": "node_modules/google-libphonenumber/dist/libphonenumber.js",
    "reasonCategory": "usageTrusted",
    "updated": "2021-02-16T19:08:17.452Z",
    "reasonDetail": "Hard-coded string used for testing capabilities."
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/google-libphonenumber/dist/libphonenumber.js",
    "reasonCategory": "notExercisedByOurApp",
    "updated": "2021-02-16T19:08:17.452Z",
    "reasonDetail": "Regular expression, not jQuery call"
  },
  {
    "rule": "jQuery-globalEval(",
    "path": "node_modules/google-libphonenumber/dist/libphonenumber.js",
    "reasonCategory": "notExercisedByOurApp",
    "updated": "2021-02-16T19:08:17.452Z",
    "reasonDetail": "Part of their google closure 'debug loader'"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/google-libphonenumber/dist/libphonenumber.js",
    "reasonCategory": "notExercisedByOurApp",
    "updated": "2021-02-16T19:08:17.452Z",
    "reasonDetail": "Part of their google closure 'debug loader'"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/got/dist/source/core/index.js",
    "line": "                            searchParameters.append(key, '');",
    "reasonCategory": "falseMatch",
    "updated": "2021-10-06T15:40:12.124Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/got/dist/source/core/index.js",
    "line": "                            searchParameters.append(key, value);",
    "reasonCategory": "falseMatch",
    "updated": "2021-10-06T15:40:12.124Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/got/dist/source/core/index.js",
    "line": "                        searchParameters.append(key, value);",
    "reasonCategory": "falseMatch",
    "updated": "2021-10-06T15:40:12.124Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/got/node_modules/@sindresorhus/is/dist/index.js",
    "line": "    'innerHTML',",
    "reasonCategory": "usageTrusted",
    "updated": "2021-10-06T15:40:12.124Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/hast-util-raw/index.js",
    "line": "function wrap(tree, file) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/history/node_modules/regenerator-runtime/runtime.js",
    "line": "  function wrap(innerFn, outerFn, self, tryLocsList) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/history/node_modules/regenerator-runtime/runtime.js",
    "line": "      wrap(innerFn, outerFn, self, tryLocsList),",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/history/umd/history.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2019-12-11T01:10:06.091Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/html-minifier-terser/node_modules/commander/index.js",
    "line": "        desc.push('  ' + pad(arg.name, width) + '  ' + wrap(argsDescription[arg.name], descriptionWidth, width + 4));",
    "reasonCategory": "falseMatch",
    "updated": "2021-11-13T01:38:33.299Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/html-minifier-terser/node_modules/commander/index.js",
    "line": "function wrap(str, width, indent) {",
    "reasonCategory": "falseMatch",
    "updated": "2021-11-13T01:38:33.299Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/html-minifier-terser/node_modules/commander/index.js",
    "line": "  return wrap(str, width, indent);",
    "reasonCategory": "falseMatch",
    "updated": "2021-11-13T01:38:33.299Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/html-minifier-terser/node_modules/terser/dist/bundle.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2022-07-26T23:41:36.800Z",
    "reasonDetail": "Part of keyword list for preservation in final minified build"
  },
  {
    "rule": "DOM-outerHTML",
    "path": "node_modules/html-minifier-terser/node_modules/terser/dist/bundle.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2022-07-26T23:41:36.800Z",
    "reasonDetail": "Part of keyword list for preservation in final minified build"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/html-minifier-terser/node_modules/terser/dist/bundle.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2022-07-26T23:41:36.800Z",
    "reasonDetail": "Part of keyword list for preservation in final minified build"
  },
  {
    "rule": "jQuery-after(",
    "path": "node_modules/html-minifier-terser/node_modules/terser/dist/bundle.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2022-07-26T23:41:36.800Z",
    "reasonDetail": "Part of keyword list for preservation in final minified build"
  },
  {
    "rule": "jQuery-before(",
    "path": "node_modules/html-minifier-terser/node_modules/terser/dist/bundle.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2022-07-26T23:41:36.800Z",
    "reasonDetail": "Part of keyword list for preservation in final minified build"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/html-minifier-terser/node_modules/terser/tools/domprops.js",
    "line": "    \"innerHTML\",",
    "reasonCategory": "falseMatch",
    "updated": "2022-07-26T23:41:36.800Z",
    "reasonDetail": "Part of keyword list for preservation in final minified build"
  },
  {
    "rule": "DOM-outerHTML",
    "path": "node_modules/html-minifier-terser/node_modules/terser/tools/domprops.js",
    "line": "    \"outerHTML\",",
    "reasonCategory": "falseMatch",
    "updated": "2022-07-26T23:41:36.800Z",
    "reasonDetail": "Part of keyword list for preservation in final minified build"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/http-proxy-agent/node_modules/debug/src/browser.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-11T21:58:24.827Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/http-proxy-agent/node_modules/debug/src/common.js",
    "line": "\tcreateDebug.enable(createDebug.load());",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-11T21:58:24.827Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/http-proxy-agent/node_modules/debug/src/node.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-11T21:58:24.827Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/https-proxy-agent/node_modules/debug/src/browser.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-11T21:58:24.827Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/https-proxy-agent/node_modules/debug/src/common.js",
    "line": "\tcreateDebug.enable(createDebug.load());",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-11T21:58:24.827Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/https-proxy-agent/node_modules/debug/src/node.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-11T21:58:24.827Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/immutable/dist/immutable.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-11T16:23:37.435Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/intl-tel-input/build/js/intlTelInput-jquery.js",
    "line": "                    this.selectedDialCode.innerHTML = dialCode;",
    "reasonCategory": "usageTrusted",
    "updated": "2021-12-01T01:31:12.757Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/intl-tel-input/build/js/intlTelInput-jquery.js",
    "line": "                this.telInput.parentNode.insertBefore(wrapper, this.telInput);",
    "reasonCategory": "falseMatch",
    "updated": "2021-12-01T01:31:12.757Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/intl-tel-input/build/js/intlTelInput-jquery.js",
    "line": "                wrapper.parentNode.insertBefore(this.telInput, wrapper);",
    "reasonCategory": "falseMatch",
    "updated": "2021-12-01T01:31:12.757Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/intl-tel-input/build/js/intlTelInput-jquery.min.js",
    "reasonCategory": "usageTrusted",
    "updated": "2021-12-01T01:31:12.757Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/intl-tel-input/build/js/intlTelInput-jquery.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2021-12-01T01:31:12.757Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/intl-tel-input/build/js/intlTelInput.js",
    "line": "                        this.selectedDialCode.innerHTML = dialCode;",
    "reasonCategory": "usageTrusted",
    "updated": "2021-12-01T01:31:12.757Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/intl-tel-input/build/js/intlTelInput.js",
    "line": "                    this.telInput.parentNode.insertBefore(wrapper, this.telInput);",
    "reasonCategory": "falseMatch",
    "updated": "2021-12-01T01:31:12.757Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/intl-tel-input/build/js/intlTelInput.js",
    "line": "                    wrapper.parentNode.insertBefore(this.telInput, wrapper);",
    "reasonCategory": "falseMatch",
    "updated": "2021-12-01T01:31:12.757Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/intl-tel-input/build/js/intlTelInput.min.js",
    "reasonCategory": "usageTrusted",
    "updated": "2021-12-01T01:31:12.757Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/intl-tel-input/build/js/intlTelInput.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2021-12-01T01:31:12.757Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/intl-tel-input/src/js/intlTelInput.js",
    "line": "      this.selectedDialCode.innerHTML = dialCode;",
    "reasonCategory": "usageTrusted",
    "updated": "2021-12-01T01:31:12.757Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/intl-tel-input/src/js/intlTelInput.js",
    "line": "    this.telInput.parentNode.insertBefore(wrapper, this.telInput);",
    "reasonCategory": "falseMatch",
    "updated": "2021-12-01T01:31:12.757Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/intl-tel-input/src/js/intlTelInput.js",
    "line": "    wrapper.parentNode.insertBefore(this.telInput, wrapper);",
    "reasonCategory": "falseMatch",
    "updated": "2021-12-01T01:31:12.757Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/intl-tel-input/src/spec/helpers/helpers.js",
    "line": "  $(\"script.iti-load-utils\").remove();",
    "reasonCategory": "falseMatch",
    "updated": "2021-12-01T01:31:12.757Z"
  },
  {
    "rule": "DOM-document.write(",
    "path": "node_modules/is-function/test.js",
    "line": "        iframe.contentWindow.document.write([",
    "reasonCategory": "testCode",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/jpeg-js/lib/decoder.js",
    "line": "    load: function load(path) {",
    "reasonCategory": "falseMatch",
    "updated": "2021-04-06T04:01:59.934Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/js-tokens/index.js",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-19T21:59:32.770Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/js-yaml/dist/js-yaml.js",
    "line": "function load(input, options) {",
    "reasonCategory": "falseMatch",
    "updated": "2019-04-03T00:52:04.925Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/js-yaml/dist/js-yaml.js",
    "line": "  return load(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));",
    "reasonCategory": "falseMatch",
    "updated": "2019-04-03T00:52:04.925Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/js-yaml/dist/js-yaml.js",
    "line": "  // Avoid code execution in load() via toString property",
    "reasonCategory": "falseMatch",
    "updated": "2019-06-19T20:42:32.133Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/js-yaml/dist/js-yaml.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2019-03-13T01:27:05.473Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/js-yaml/lib/js-yaml/loader.js",
    "line": "function load(input, options) {",
    "reasonCategory": "falseMatch",
    "updated": "2019-04-03T00:52:04.925Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/js-yaml/lib/js-yaml/loader.js",
    "line": "  return load(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));",
    "reasonCategory": "falseMatch",
    "updated": "2019-04-03T00:52:04.925Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/js-yaml/lib/js-yaml/loader.js",
    "line": "  // Avoid code execution in load() via toString property",
    "reasonCategory": "falseMatch",
    "updated": "2019-06-19T20:42:32.133Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/internals/collection.js",
    "line": "  $({ global: true, forced: Constructor != NativeConstructor }, exported);",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/internals/define-iterator.js",
    "line": "    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/internals/regexp-exec.js",
    "line": "      reCopy = new RegExp('^' + re.source + '$(?!\\\\s)', regexpFlags.call(re));",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/internals/typed-array-constructor.js",
    "line": "  $({ target: 'Object', stat: true, forced: !NATIVE_ARRAY_BUFFER_VIEWS }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/internals/typed-array-constructor.js",
    "line": "    $({",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.array-buffer.constructor.js",
    "line": "$({ global: true, forced: NativeArrayBuffer !== ArrayBuffer }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.array-buffer.is-view.js",
    "line": "$({ target: 'ArrayBuffer', stat: true, forced: !NATIVE_ARRAY_BUFFER_VIEWS }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.array-buffer.slice.js",
    "line": "$({ target: 'ArrayBuffer', proto: true, unsafe: true, forced: INCORRECT_SLICE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.array.concat.js",
    "line": "$({ target: 'Array', proto: true, forced: FORCED }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.array.copy-within.js",
    "line": "$({ target: 'Array', proto: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.array.every.js",
    "line": "$({ target: 'Array', proto: true, forced: sloppyArrayMethod('every') }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.array.fill.js",
    "line": "$({ target: 'Array', proto: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.array.filter.js",
    "line": "$({ target: 'Array', proto: true, forced: !arrayMethodHasSpeciesSupport('filter') }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.array.find-index.js",
    "line": "$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.array.find.js",
    "line": "$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.array.flat-map.js",
    "line": "$({ target: 'Array', proto: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.array.flat.js",
    "line": "$({ target: 'Array', proto: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.array.for-each.js",
    "line": "$({ target: 'Array', proto: true, forced: [].forEach != forEach }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.array.from.js",
    "line": "$({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.array.includes.js",
    "line": "$({ target: 'Array', proto: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.array.index-of.js",
    "line": "$({ target: 'Array', proto: true, forced: NEGATIVE_ZERO || SLOPPY_METHOD }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.array.is-array.js",
    "line": "$({ target: 'Array', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.array.join.js",
    "line": "$({ target: 'Array', proto: true, forced: ES3_STRINGS || SLOPPY_METHOD }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.array.last-index-of.js",
    "line": "$({ target: 'Array', proto: true, forced: lastIndexOf !== [].lastIndexOf }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.array.map.js",
    "line": "$({ target: 'Array', proto: true, forced: !arrayMethodHasSpeciesSupport('map') }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.array.of.js",
    "line": "$({ target: 'Array', stat: true, forced: ISNT_GENERIC }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.array.reduce-right.js",
    "line": "$({ target: 'Array', proto: true, forced: sloppyArrayMethod('reduceRight') }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.array.reduce.js",
    "line": "$({ target: 'Array', proto: true, forced: sloppyArrayMethod('reduce') }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.array.reverse.js",
    "line": "$({ target: 'Array', proto: true, forced: String(test) === String(test.reverse()) }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.array.slice.js",
    "line": "$({ target: 'Array', proto: true, forced: !arrayMethodHasSpeciesSupport('slice') }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.array.some.js",
    "line": "$({ target: 'Array', proto: true, forced: sloppyArrayMethod('some') }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.array.sort.js",
    "line": "$({ target: 'Array', proto: true, forced: FORCED }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.array.splice.js",
    "line": "$({ target: 'Array', proto: true, forced: !arrayMethodHasSpeciesSupport('splice') }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.data-view.js",
    "line": "$({ global: true, forced: !NATIVE_ARRAY_BUFFER }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.date.now.js",
    "line": "$({ target: 'Date', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.date.to-iso-string.js",
    "line": "$({ target: 'Date', proto: true, forced: Date.prototype.toISOString !== toISOString }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.date.to-json.js",
    "line": "$({ target: 'Date', proto: true, forced: FORCED }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.function.bind.js",
    "line": "$({ target: 'Function', proto: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.math.acosh.js",
    "line": "$({ target: 'Math', stat: true, forced: FORCED }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.math.asinh.js",
    "line": "$({ target: 'Math', stat: true, forced: !(nativeAsinh && 1 / nativeAsinh(0) > 0) }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.math.atanh.js",
    "line": "$({ target: 'Math', stat: true, forced: !(nativeAtanh && 1 / nativeAtanh(-0) < 0) }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.math.cbrt.js",
    "line": "$({ target: 'Math', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.math.clz32.js",
    "line": "$({ target: 'Math', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.math.cosh.js",
    "line": "$({ target: 'Math', stat: true, forced: !nativeCosh || nativeCosh(710) === Infinity }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.math.expm1.js",
    "line": "$({ target: 'Math', stat: true, forced: expm1 != Math.expm1 }, { expm1: expm1 });",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.math.fround.js",
    "line": "$({ target: 'Math', stat: true }, { fround: fround });",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.math.hypot.js",
    "line": "$({ target: 'Math', stat: true, forced: BUGGY }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.math.imul.js",
    "line": "$({ target: 'Math', stat: true, forced: FORCED }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.math.log10.js",
    "line": "$({ target: 'Math', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.math.log1p.js",
    "line": "$({ target: 'Math', stat: true }, { log1p: log1p });",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.math.log2.js",
    "line": "$({ target: 'Math', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.math.sign.js",
    "line": "$({ target: 'Math', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.math.sinh.js",
    "line": "$({ target: 'Math', stat: true, forced: FORCED }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.math.tanh.js",
    "line": "$({ target: 'Math', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.math.trunc.js",
    "line": "$({ target: 'Math', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.number.epsilon.js",
    "line": "$({ target: 'Number', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.number.is-finite.js",
    "line": "$({ target: 'Number', stat: true }, { isFinite: numberIsFinite });",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.number.is-integer.js",
    "line": "$({ target: 'Number', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.number.is-nan.js",
    "line": "$({ target: 'Number', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.number.is-safe-integer.js",
    "line": "$({ target: 'Number', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.number.max-safe-integer.js",
    "line": "$({ target: 'Number', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.number.min-safe-integer.js",
    "line": "$({ target: 'Number', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.number.parse-float.js",
    "line": "$({ target: 'Number', stat: true, forced: Number.parseFloat != parseFloat }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.number.parse-int.js",
    "line": "$({ target: 'Number', stat: true, forced: Number.parseInt != parseInt }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.number.to-fixed.js",
    "line": "$({ target: 'Number', proto: true, forced: FORCED }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.number.to-precision.js",
    "line": "$({ target: 'Number', proto: true, forced: FORCED }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.object.assign.js",
    "line": "$({ target: 'Object', stat: true, forced: Object.assign !== assign }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.object.create.js",
    "line": "$({ target: 'Object', stat: true, sham: !DESCRIPTORS }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.object.define-getter.js",
    "line": "  $({ target: 'Object', proto: true, forced: FORCED }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.object.define-properties.js",
    "line": "$({ target: 'Object', stat: true, forced: !DESCRIPTORS, sham: !DESCRIPTORS }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.object.define-property.js",
    "line": "$({ target: 'Object', stat: true, forced: !DESCRIPTORS, sham: !DESCRIPTORS }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.object.define-setter.js",
    "line": "  $({ target: 'Object', proto: true, forced: FORCED }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.object.entries.js",
    "line": "$({ target: 'Object', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.object.freeze.js",
    "line": "$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !FREEZING }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.object.from-entries.js",
    "line": "$({ target: 'Object', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.object.get-own-property-descriptor.js",
    "line": "$({ target: 'Object', stat: true, forced: FORCED, sham: !DESCRIPTORS }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.object.get-own-property-descriptors.js",
    "line": "$({ target: 'Object', stat: true, sham: !DESCRIPTORS }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.object.get-own-property-names.js",
    "line": "$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.object.get-prototype-of.js",
    "line": "$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !CORRECT_PROTOTYPE_GETTER }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.object.is-extensible.js",
    "line": "$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.object.is-frozen.js",
    "line": "$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.object.is-sealed.js",
    "line": "$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.object.is.js",
    "line": "$({ target: 'Object', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.object.keys.js",
    "line": "$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.object.lookup-getter.js",
    "line": "  $({ target: 'Object', proto: true, forced: FORCED }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.object.lookup-setter.js",
    "line": "  $({ target: 'Object', proto: true, forced: FORCED }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.object.prevent-extensions.js",
    "line": "$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !FREEZING }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.object.seal.js",
    "line": "$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !FREEZING }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.object.set-prototype-of.js",
    "line": "$({ target: 'Object', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.object.values.js",
    "line": "$({ target: 'Object', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.parse-float.js",
    "line": "$({ global: true, forced: parseFloat != parseFloatImplementation }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.parse-int.js",
    "line": "$({ global: true, forced: parseInt != parseIntImplementation }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.promise.all-settled.js",
    "line": "$({ target: 'Promise', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.promise.finally.js",
    "line": "$({ target: 'Promise', proto: true, real: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.promise.js",
    "line": "    if (typeof $fetch == 'function') $({ global: true, enumerable: true, forced: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.promise.js",
    "line": "$({ global: true, wrap: true, forced: FORCED }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.promise.js",
    "line": "$({ target: PROMISE, stat: true, forced: FORCED }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.promise.js",
    "line": "$({ target: PROMISE, stat: true, forced: IS_PURE || FORCED }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.promise.js",
    "line": "$({ target: PROMISE, stat: true, forced: INCORRECT_ITERATION }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.reflect.apply.js",
    "line": "$({ target: 'Reflect', stat: true, forced: OPTIONAL_ARGUMENTS_LIST }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.reflect.construct.js",
    "line": "$({ target: 'Reflect', stat: true, forced: FORCED, sham: FORCED }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.reflect.define-property.js",
    "line": "$({ target: 'Reflect', stat: true, forced: ERROR_INSTEAD_OF_FALSE, sham: !DESCRIPTORS }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.reflect.delete-property.js",
    "line": "$({ target: 'Reflect', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.reflect.get-own-property-descriptor.js",
    "line": "$({ target: 'Reflect', stat: true, sham: !DESCRIPTORS }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.reflect.get-prototype-of.js",
    "line": "$({ target: 'Reflect', stat: true, sham: !CORRECT_PROTOTYPE_GETTER }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.reflect.get.js",
    "line": "$({ target: 'Reflect', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.reflect.has.js",
    "line": "$({ target: 'Reflect', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.reflect.is-extensible.js",
    "line": "$({ target: 'Reflect', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.reflect.own-keys.js",
    "line": "$({ target: 'Reflect', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.reflect.prevent-extensions.js",
    "line": "$({ target: 'Reflect', stat: true, sham: !FREEZING }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.reflect.set-prototype-of.js",
    "line": "if (objectSetPrototypeOf) $({ target: 'Reflect', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.reflect.set.js",
    "line": "$({ target: 'Reflect', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.regexp.exec.js",
    "line": "$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.string.anchor.js",
    "line": "$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('anchor') }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.string.big.js",
    "line": "$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('big') }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.string.blink.js",
    "line": "$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('blink') }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.string.bold.js",
    "line": "$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('bold') }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.string.code-point-at.js",
    "line": "$({ target: 'String', proto: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.string.ends-with.js",
    "line": "$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('endsWith') }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.string.fixed.js",
    "line": "$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('fixed') }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.string.fontcolor.js",
    "line": "$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('fontcolor') }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.string.fontsize.js",
    "line": "$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('fontsize') }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.string.from-code-point.js",
    "line": "$({ target: 'String', stat: true, forced: INCORRECT_LENGTH }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.string.includes.js",
    "line": "$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.string.italics.js",
    "line": "$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('italics') }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.string.link.js",
    "line": "$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('link') }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.string.match-all.js",
    "line": "$({ target: 'String', proto: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.string.pad-end.js",
    "line": "$({ target: 'String', proto: true, forced: WEBKIT_BUG }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.string.pad-start.js",
    "line": "$({ target: 'String', proto: true, forced: WEBKIT_BUG }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.string.raw.js",
    "line": "$({ target: 'String', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.string.repeat.js",
    "line": "$({ target: 'String', proto: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.string.replace.js",
    "line": "var SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d\\d?|<[^>]*>)/g;",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.string.replace.js",
    "line": "var SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d\\d?)/g;",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.string.small.js",
    "line": "$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('small') }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.string.starts-with.js",
    "line": "$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('startsWith') }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.string.strike.js",
    "line": "$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('strike') }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.string.sub.js",
    "line": "$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('sub') }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.string.sup.js",
    "line": "$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('sup') }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.string.trim-end.js",
    "line": "$({ target: 'String', proto: true, forced: FORCED }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.string.trim-start.js",
    "line": "$({ target: 'String', proto: true, forced: FORCED }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.string.trim.js",
    "line": "$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.symbol.description.js",
    "line": "  $({ global: true, forced: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.symbol.js",
    "line": "$({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.symbol.js",
    "line": "$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.symbol.js",
    "line": "$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.symbol.js",
    "line": "$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.symbol.js",
    "line": "$({ target: 'Object', stat: true, forced: fails(function () { getOwnPropertySymbolsModule.f(1); }) }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.symbol.js",
    "line": "JSON && $({ target: 'JSON', stat: true, forced: !NATIVE_SYMBOL || fails(function () {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.symbol.js",
    "line": "    return wrap(tag, description);",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/es.symbol.js",
    "line": "    return wrap(wellKnownSymbol(name), name);",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.aggregate-error.js",
    "line": "$({ global: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.array.is-template-object.js",
    "line": "$({ target: 'Array', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.composite-key.js",
    "line": "$({ global: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.composite-symbol.js",
    "line": "$({ global: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.global-this.js",
    "line": "$({ global: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.map.delete-all.js",
    "line": "$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.map.every.js",
    "line": "$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.map.filter.js",
    "line": "$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.map.find-key.js",
    "line": "$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.map.find.js",
    "line": "$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.map.from.js",
    "line": "$({ target: 'Map', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.map.group-by.js",
    "line": "$({ target: 'Map', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.map.includes.js",
    "line": "$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.map.key-by.js",
    "line": "$({ target: 'Map', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.map.key-of.js",
    "line": "$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.map.map-keys.js",
    "line": "$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.map.map-values.js",
    "line": "$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.map.merge.js",
    "line": "$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.map.of.js",
    "line": "$({ target: 'Map', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.map.reduce.js",
    "line": "$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.map.some.js",
    "line": "$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.map.update-or-insert.js",
    "line": "$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.map.update.js",
    "line": "$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.math.clamp.js",
    "line": "$({ target: 'Math', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.math.deg-per-rad.js",
    "line": "$({ target: 'Math', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.math.degrees.js",
    "line": "$({ target: 'Math', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.math.fscale.js",
    "line": "$({ target: 'Math', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.math.iaddh.js",
    "line": "$({ target: 'Math', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.math.imulh.js",
    "line": "$({ target: 'Math', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.math.isubh.js",
    "line": "$({ target: 'Math', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.math.rad-per-deg.js",
    "line": "$({ target: 'Math', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.math.radians.js",
    "line": "$({ target: 'Math', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.math.scale.js",
    "line": "$({ target: 'Math', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.math.seeded-prng.js",
    "line": "$({ target: 'Math', stat: true, forced: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.math.signbit.js",
    "line": "$({ target: 'Math', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.math.umulh.js",
    "line": "$({ target: 'Math', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.number.from-string.js",
    "line": "$({ target: 'Number', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.observable.js",
    "line": "$({ global: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.promise.any.js",
    "line": "$({ target: 'Promise', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.promise.try.js",
    "line": "$({ target: 'Promise', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.reflect.define-metadata.js",
    "line": "$({ target: 'Reflect', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.reflect.delete-metadata.js",
    "line": "$({ target: 'Reflect', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.reflect.get-metadata-keys.js",
    "line": "$({ target: 'Reflect', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.reflect.get-metadata.js",
    "line": "$({ target: 'Reflect', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.reflect.get-own-metadata-keys.js",
    "line": "$({ target: 'Reflect', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.reflect.get-own-metadata.js",
    "line": "$({ target: 'Reflect', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.reflect.has-metadata.js",
    "line": "$({ target: 'Reflect', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.reflect.has-own-metadata.js",
    "line": "$({ target: 'Reflect', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.reflect.metadata.js",
    "line": "$({ target: 'Reflect', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.set.add-all.js",
    "line": "$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.set.delete-all.js",
    "line": "$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.set.difference.js",
    "line": "$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.set.every.js",
    "line": "$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.set.filter.js",
    "line": "$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.set.find.js",
    "line": "$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.set.from.js",
    "line": "$({ target: 'Set', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.set.intersection.js",
    "line": "$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.set.is-disjoint-from.js",
    "line": "$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.set.is-subset-of.js",
    "line": "$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.set.is-superset-of.js",
    "line": "$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.set.join.js",
    "line": "$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.set.map.js",
    "line": "$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.set.of.js",
    "line": "$({ target: 'Set', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.set.reduce.js",
    "line": "$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.set.some.js",
    "line": "$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.set.symmetric-difference.js",
    "line": "$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.set.union.js",
    "line": "$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.string.at.js",
    "line": "$({ target: 'String', proto: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.string.code-points.js",
    "line": "$({ target: 'String', proto: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.string.replace-all.js",
    "line": "$({ target: 'String', proto: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.weak-map.delete-all.js",
    "line": "$({ target: 'WeakMap', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.weak-map.from.js",
    "line": "$({ target: 'WeakMap', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.weak-map.of.js",
    "line": "$({ target: 'WeakMap', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.weak-set.add-all.js",
    "line": "$({ target: 'WeakSet', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.weak-set.delete-all.js",
    "line": "$({ target: 'WeakSet', proto: true, real: true, forced: IS_PURE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.weak-set.from.js",
    "line": "$({ target: 'WeakSet', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/esnext.weak-set.of.js",
    "line": "$({ target: 'WeakSet', stat: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/web.queue-microtask.js",
    "line": "$({ global: true, enumerable: true, noTargetGet: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/web.timers.js",
    "line": "$({ global: true, bind: true, forced: MSIE }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/web.timers.js",
    "line": "  setTimeout: wrap(global.setTimeout),",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/web.timers.js",
    "line": "  setInterval: wrap(global.setInterval)",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/web.url-search-params.js",
    "line": "$({ global: true, forced: !USE_NATIVE_URL }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/web.url-search-params.js",
    "line": "  append: function append(name, value) {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/web.url.js",
    "line": "$({ global: true, forced: !USE_NATIVE_URL, sham: !DESCRIPTORS }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/core-js/modules/web.url.to-json.js",
    "line": "$({ target: 'URL', proto: true, enumerable: true }, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-01-06T20:40:04.973Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/regenerator-runtime/runtime.js",
    "line": "  function wrap(innerFn, outerFn, self, tryLocsList) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/lazy-universal-dotenv/node_modules/regenerator-runtime/runtime.js",
    "line": "      wrap(innerFn, outerFn, self, tryLocsList),",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/lib/parse-string.js",
    "line": "  function not$(x){ return !x; }",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-19T21:59:32.770Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/Func.js",
    "line": "apply = curry$(function(f, list){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/Func.js",
    "line": "  return curry$(f);",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/Func.js",
    "line": "flip = curry$(function(f, x, y){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/Func.js",
    "line": "over = curry$(function(f, g, x, y){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/Func.js",
    "line": "function curry$(f, bound){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "      if (in$(x, ys)) {",
    "reasonCategory": "falseMatch",
    "updated": "2020-08-26T00:10:28.628Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "      if (!in$(x, ys)) {",
    "reasonCategory": "falseMatch",
    "updated": "2020-08-26T00:10:28.628Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "      if (!in$(x, results)) {",
    "reasonCategory": "falseMatch",
    "updated": "2020-08-26T00:10:28.628Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "each = curry$(function(f, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "map = curry$(function(f, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "filter = curry$(function(f, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "reject = curry$(function(f, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "remove = curry$(function(el, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "partition = curry$(function(f, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "find = curry$(function(f, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "    if (!in$(x, result)) {",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "uniqueBy = curry$(function(f, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "    if (in$(val, seen)) {",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "fold = foldl = curry$(function(f, memo, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "fold1 = foldl1 = curry$(function(f, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "foldr = curry$(function(f, memo, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "foldr1 = curry$(function(f, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "unfoldr = curry$(function(f, b){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "concatMap = curry$(function(f, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "countBy = curry$(function(f, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "groupBy = curry$(function(f, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "any = curry$(function(f, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "all = curry$(function(f, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "sortWith = curry$(function(f, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "sortBy = curry$(function(f, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "maximumBy = curry$(function(f, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "minimumBy = curry$(function(f, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "scan = scanl = curry$(function(f, memo, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "scan1 = scanl1 = curry$(function(f, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "scanr = curry$(function(f, memo, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "scanr1 = curry$(function(f, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "slice = curry$(function(x, y, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "take = curry$(function(n, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "drop = curry$(function(n, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "splitAt = curry$(function(n, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "takeWhile = curry$(function(p, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "dropWhile = curry$(function(p, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "span = curry$(function(p, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "breakList = curry$(function(p, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "  return span(compose$(p, not$), xs);",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "zip = curry$(function(xs, ys){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "zipWith = curry$(function(f, xs, ys){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "    results$.push(f.apply(null, (fn$())));",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "  function fn$(){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "at = curry$(function(n, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "elemIndex = curry$(function(el, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "elemIndices = curry$(function(el, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "findIndex = curry$(function(f, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "findIndices = curry$(function(f, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "function curry$(f, bound){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "function in$(x, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "function compose$() {",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/List.js",
    "line": "function not$(x){ return !x; }",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/Num.js",
    "line": "max = curry$(function(x$, y$){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/Num.js",
    "line": "min = curry$(function(x$, y$){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/Num.js",
    "line": "quot = curry$(function(x, y){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/Num.js",
    "line": "rem = curry$(function(x$, y$){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/Num.js",
    "line": "div = curry$(function(x, y){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/Num.js",
    "line": "mod = curry$(function(x$, y$){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/Num.js",
    "line": "pow = curry$(function(x$, y$){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/Num.js",
    "line": "atan2 = curry$(function(x, y){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/Num.js",
    "line": "gcd = curry$(function(x, y){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/Num.js",
    "line": "lcm = curry$(function(x, y){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/Num.js",
    "line": "function curry$(f, bound){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/Obj.js",
    "line": "listsToObj = curry$(function(keys, values){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/Obj.js",
    "line": "each = curry$(function(f, object){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/Obj.js",
    "line": "map = curry$(function(f, object){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/Obj.js",
    "line": "filter = curry$(function(f, object){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/Obj.js",
    "line": "reject = curry$(function(f, object){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/Obj.js",
    "line": "partition = curry$(function(f, object){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/Obj.js",
    "line": "find = curry$(function(f, object){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/Obj.js",
    "line": "function curry$(f, bound){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/Str.js",
    "line": "split = curry$(function(sep, str){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/Str.js",
    "line": "join = curry$(function(sep, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/Str.js",
    "line": "repeat = curry$(function(n, str){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/Str.js",
    "line": "function curry$(f, bound){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/index.js",
    "line": "isType = curry$(function(type, x){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/index.js",
    "line": "replicate = curry$(function(n, x){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/prelude-ls/lib/index.js",
    "line": "function curry$(f, bound){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/type-check/lib/parse-type.js",
    "line": "    if (in$('->', tokens)) {",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/levn/node_modules/type-check/lib/parse-type.js",
    "line": "  function in$(x, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T20:07:48.358Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/libheif-js/libheif/libheif.js",
    "reasonCategory": "falseMatch",
    "updated": "2021-07-16T22:15:43.772Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/load-json-file/node_modules/parse-json/index.js",
    "line": "\tfileName: errorEx.append('in %s')",
    "reasonCategory": "falseMatch",
    "updated": "2021-12-07T23:11:11.870Z"
  },
  {
    "rule": "eval",
    "path": "node_modules/loader-runner/lib/loadLoader.js",
    "line": "\t\t\tvar modulePromise = eval(\"import(\" + JSON.stringify(loaderUrl.toString()) + \")\");",
    "reasonCategory": "usageTrusted",
    "updated": "2021-04-05T20:48:36.065Z"
  },
  {
    "rule": "jQuery-after(",
    "path": "node_modules/lodash-es/after.js",
    "line": " * var done = _.after(saves.length, function() {",
    "reasonCategory": "falseMatch",
    "updated": "2019-03-09T00:08:44.242Z"
  },
  {
    "rule": "jQuery-after(",
    "path": "node_modules/lodash-es/after.js",
    "line": "function after(n, func) {",
    "reasonCategory": "falseMatch",
    "updated": "2019-03-09T00:08:44.242Z"
  },
  {
    "rule": "jQuery-before(",
    "path": "node_modules/lodash-es/before.js",
    "line": " * jQuery(element).on('click', _.before(5, addContactToList));",
    "reasonCategory": "exampleCode",
    "updated": "2019-03-09T00:08:44.242Z"
  },
  {
    "rule": "jQuery-before(",
    "path": "node_modules/lodash-es/before.js",
    "line": "function before(n, func) {",
    "reasonCategory": "falseMatch",
    "updated": "2019-03-09T00:08:44.242Z"
  },
  {
    "rule": "jQuery-before(",
    "path": "node_modules/lodash-es/once.js",
    "line": "  return before(2, func);",
    "reasonCategory": "falseMatch",
    "updated": "2019-03-09T00:08:44.242Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/make-fetch-happen/node_modules/debug/src/browser.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-04-08T07:10:10.677Z",
    "reasonDetail": "node-gyp dependency"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/make-fetch-happen/node_modules/debug/src/common.js",
    "line": "\tcreateDebug.enable(createDebug.load());",
    "reasonCategory": "falseMatch",
    "updated": "2022-04-08T07:10:10.677Z",
    "reasonDetail": "node-gyp dependency"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/make-fetch-happen/node_modules/debug/src/node.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-04-08T07:10:10.677Z",
    "reasonDetail": "node-gyp dependency"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/mdast-util-to-hast/lib/footer.js",
    "line": "    wrap(",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/mdast-util-to-hast/lib/handlers/blockquote.js",
    "line": "  return h(node, 'blockquote', wrap(all(h, node), true))",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-html(",
    "path": "node_modules/mdast-util-to-hast/lib/handlers/html.js",
    "line": "function html(h, node) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/mdast-util-to-hast/lib/handlers/list.js",
    "line": "  return h(node, name, props, wrap(items, true))",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/mdast-util-to-hast/lib/handlers/root.js",
    "line": "  return h.augment(node, u('root', wrap(all(h, node))))",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/mdast-util-to-hast/lib/handlers/table.js",
    "line": "    result[index] = h(rows[index], 'tr', wrap(out, true))",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/mdast-util-to-hast/lib/handlers/table.js",
    "line": "    wrap(",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/mdast-util-to-hast/lib/handlers/table.js",
    "line": "      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/mdast-util-to-hast/lib/handlers/table.js",
    "line": "              wrap(result.slice(1), true)",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/mdast-util-to-hast/lib/wrap.js",
    "line": "function wrap(nodes, loose) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "eval",
    "path": "node_modules/micro/node_modules/depd/index.js",
    "line": "  var deprecatedfn = eval('(function (' + args + ') {\\n' +",
    "reasonCategory": "usageTrusted",
    "updated": "2022-02-11T21:58:24.827Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/min-document/serialize.js",
    "line": "        } else if (elem.innerHTML) {",
    "reasonCategory": "usageTrusted",
    "updated": "2018-09-15T00:38:04.183Z",
    "reasonDetail": "Getting the value, not setting it"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/min-document/serialize.js",
    "line": "        key !== \"textContent\" && key !== \"innerText\" && key !== \"namespaceURI\" &&  key !== \"innerHTML\"",
    "reasonCategory": "usageTrusted",
    "updated": "2018-09-15T00:38:04.183Z",
    "reasonDetail": "Getting the value, not setting it"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/min-document/serialize.js",
    "line": "            strings.push(elem.innerHTML)",
    "reasonCategory": "usageTrusted",
    "updated": "2020-09-11T17:24:56.124Z",
    "reasonDetail": "Read, not write"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/minipass-fetch/lib/headers.js",
    "line": "          this.append(headerName, value)",
    "reasonCategory": "falseMatch",
    "updated": "2022-04-08T07:10:10.677Z",
    "reasonDetail": "node-gyp dependency"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/minipass-fetch/lib/headers.js",
    "line": "          this.append(pair[0], pair[1])",
    "reasonCategory": "falseMatch",
    "updated": "2022-04-08T07:10:10.677Z",
    "reasonDetail": "node-gyp dependency"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/minipass-fetch/lib/headers.js",
    "line": "          this.append(key, init[key])",
    "reasonCategory": "falseMatch",
    "updated": "2022-04-08T07:10:10.677Z",
    "reasonDetail": "node-gyp dependency"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/minipass-fetch/lib/request.js",
    "line": "        headers.append('Content-Type', contentType)",
    "reasonCategory": "falseMatch",
    "updated": "2022-04-08T07:10:10.677Z",
    "reasonDetail": "node-gyp dependency"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/minipass-fetch/lib/response.js",
    "line": "        headers.append('Content-Type', contentType)",
    "reasonCategory": "falseMatch",
    "updated": "2022-04-08T07:10:10.677Z",
    "reasonDetail": "node-gyp dependency"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/moment/min/moment-with-locales.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2022-04-11T17:11:47.521Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/moment/min/moment.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T01:39:53.992Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/neo-async/async.js",
    "line": "      this.insertBefore(this.head, node);",
    "reasonCategory": "falseMatch",
    "updated": "2020-04-25T01:47:02.583Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/neo-async/async.js",
    "line": "          q._tasks.insertBefore(nextNode, item);",
    "reasonCategory": "falseMatch",
    "updated": "2020-04-25T01:47:02.583Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/neo-async/async.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2020-04-25T01:47:02.583Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/neo-async/async.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2020-04-25T01:47:02.583Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/neo-async/async.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2020-04-25T01:47:02.583Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/neo-async/async.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2020-04-25T01:47:02.583Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/node-fetch/lib/index.es.js",
    "line": "\t\t\t\t\tthis.append(headerName, value);",
    "reasonCategory": "falseMatch",
    "updated": "2020-09-14T16:19:54.461Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/node-fetch/lib/index.es.js",
    "line": "\t\t// We don't worry about converting prop to ByteString here as append()",
    "reasonCategory": "falseMatch",
    "updated": "2020-09-14T16:19:54.461Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/node-fetch/lib/index.es.js",
    "line": "\t\t\t\t\tthis.append(pair[0], pair[1]);",
    "reasonCategory": "falseMatch",
    "updated": "2020-09-14T16:19:54.461Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/node-fetch/lib/index.es.js",
    "line": "\t\t\t\t\tthis.append(key, value);",
    "reasonCategory": "falseMatch",
    "updated": "2020-09-14T16:19:54.461Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/node-fetch/lib/index.es.js",
    "line": "\tappend(name, value) {",
    "reasonCategory": "falseMatch",
    "updated": "2020-09-14T16:19:54.461Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/node-fetch/lib/index.es.js",
    "line": "\t\t\t\theaders.append('Content-Type', contentType);",
    "reasonCategory": "falseMatch",
    "updated": "2020-09-14T16:19:54.461Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/node-fetch/lib/index.es.js",
    "line": "\t\t\t\theaders.append('Content-Type', contentType);",
    "reasonCategory": "falseMatch",
    "updated": "2020-09-14T16:19:54.461Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/node-fetch/lib/index.js",
    "line": "\t\t\t\t\tthis.append(headerName, value);",
    "reasonCategory": "falseMatch",
    "updated": "2020-09-14T16:19:54.461Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/node-fetch/lib/index.js",
    "line": "\t\t// We don't worry about converting prop to ByteString here as append()",
    "reasonCategory": "falseMatch",
    "updated": "2020-09-14T16:19:54.461Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/node-fetch/lib/index.js",
    "line": "\t\t\t\t\tthis.append(pair[0], pair[1]);",
    "reasonCategory": "falseMatch",
    "updated": "2020-09-14T16:19:54.461Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/node-fetch/lib/index.js",
    "line": "\t\t\t\t\tthis.append(key, value);",
    "reasonCategory": "falseMatch",
    "updated": "2020-09-14T16:19:54.461Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/node-fetch/lib/index.js",
    "line": "\tappend(name, value) {",
    "reasonCategory": "falseMatch",
    "updated": "2020-09-14T16:19:54.461Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/node-fetch/lib/index.js",
    "line": "\t\t\t\theaders.append('Content-Type', contentType);",
    "reasonCategory": "falseMatch",
    "updated": "2020-09-14T16:19:54.461Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/node-fetch/lib/index.js",
    "line": "\t\t\t\theaders.append('Content-Type', contentType);",
    "reasonCategory": "falseMatch",
    "updated": "2020-09-14T16:19:54.461Z"
  },
  {
    "rule": "thenify-multiArgs",
    "path": "node_modules/p-event/index.js",
    "line": "\t\t\tmultiArgs: false,",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "thenify-multiArgs",
    "path": "node_modules/p-event/index.js",
    "line": "\t\t\tconst value = options.multiArgs ? args : args[0];",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "thenify-multiArgs",
    "path": "node_modules/p-event/index.js",
    "line": "\t\tmultiArgs: false,",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "thenify-multiArgs",
    "path": "node_modules/p-event/index.js",
    "line": "\t\tconst value = options.multiArgs ? args : args[0];",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "thenify-multiArgs",
    "path": "node_modules/p-event/index.js",
    "line": "\t\terror = options.multiArgs ? args : args[0];",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "thenify-multiArgs",
    "path": "node_modules/p-event/index.js",
    "line": "\t\tconst value = options.multiArgs ? args : args[0];",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/pac-proxy-agent/node_modules/debug/src/browser.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-11T21:58:24.827Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/pac-proxy-agent/node_modules/debug/src/common.js",
    "line": "\tcreateDebug.enable(createDebug.load());",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-11T21:58:24.827Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/pac-proxy-agent/node_modules/debug/src/node.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-11T21:58:24.827Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/package-json/node_modules/@sindresorhus/is/dist/index.js",
    "line": "        'innerHTML',",
    "reasonCategory": "usageTrusted",
    "updated": "2021-11-13T01:24:25.496Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/parchment/dist/parchment.js",
    "line": "        this.insertBefore(other);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/parchment/dist/parchment.js",
    "line": "                _this.insertBefore(child, _this.children.head || undefined);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/parchment/dist/parchment.js",
    "line": "            targetParent.insertBefore(child, refNode);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/parchment/dist/parchment.js",
    "line": "        this.parent.insertBefore(after, this.next);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/parchment/dist/parchment.js",
    "line": "                _this.insertBefore(blot, refBlot || undefined);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/parchment/dist/parchment.js",
    "line": "        this.parent.insertBefore(blot, ref);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/parchment/dist/parchment.js",
    "line": "        parentBlot.children.insertBefore(this, refBlot);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/parchment/dist/parchment.js",
    "line": "        target.parent.insertBefore(this, target.next);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/parchment/dist/parchment.js",
    "line": "            this.parent.insertBefore(wrapper, this.next);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/parchment/dist/parchment.js",
    "line": "        this.insertBefore(nodes[0], null);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/parchment/dist/parchment.js",
    "line": "            after.parent.insertBefore(blot, after);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/parchment/dist/parchment.js",
    "line": "        this.parent.insertBefore(after, this.next);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/parchment/dist/parchment.js",
    "line": "            parentBlot.domNode.insertBefore(this.domNode, refDomNode);",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/parchment/dist/parchment.js",
    "line": "            blot.wrap(name, value);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/parchment/dist/parchment.js",
    "line": "            blot.wrap(parent_1);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/parchment/dist/parchment.js",
    "line": "                    child = child.wrap(InlineBlot.blotName, true);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/parchment/src/blot/abstract/blot.ts",
    "line": "  insertBefore(child: Blot, refNode?: Blot): void;",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/parchment/src/blot/abstract/blot.ts",
    "line": "  wrap(name: string, value: any): Parent;",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/parchment/src/blot/abstract/blot.ts",
    "line": "  wrap(wrapper: Parent): Parent;",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/parchment/src/blot/abstract/container.ts",
    "line": "    this.insertBefore(other);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/parchment/src/blot/abstract/container.ts",
    "line": "          this.insertBefore(child, this.children.head || undefined);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/parchment/src/blot/abstract/container.ts",
    "line": "  insertBefore(childBlot: Blot, refBlot?: Blot): void {",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/parchment/src/blot/abstract/container.ts",
    "line": "      targetParent.insertBefore(child, refNode);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/parchment/src/blot/abstract/container.ts",
    "line": "    this.parent.insertBefore(after, this.next);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/parchment/src/blot/abstract/container.ts",
    "line": "          this.insertBefore(blot, refBlot || undefined);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/parchment/src/blot/abstract/format.ts",
    "line": "  wrap(name: string | Parent, value?: any): Parent {",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/parchment/src/blot/abstract/format.ts",
    "line": "    let wrapper = super.wrap(name, value);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/parchment/src/blot/abstract/shadow.ts",
    "line": "    this.parent.insertBefore(blot, ref);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/parchment/src/blot/abstract/shadow.ts",
    "line": "    parentBlot.children.insertBefore(this, refBlot);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/parchment/src/blot/abstract/shadow.ts",
    "line": "    target.parent.insertBefore(this, target.next);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/parchment/src/blot/abstract/shadow.ts",
    "line": "      this.parent.insertBefore(wrapper, this.next);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/parchment/src/blot/abstract/shadow.ts",
    "line": "      parentBlot.domNode.insertBefore(this.domNode, refDomNode);",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/parchment/src/blot/abstract/shadow.ts",
    "line": "      blot.wrap(name, value);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/parchment/src/blot/abstract/shadow.ts",
    "line": "      blot.wrap(parent);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/parchment/src/blot/abstract/shadow.ts",
    "line": "  wrap(name: string | Parent, value?: any): Parent {",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/parchment/src/blot/block.ts",
    "line": "      after.parent.insertBefore(blot, after);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/parchment/src/blot/inline.ts",
    "line": "          child = child.wrap(InlineBlot.blotName, true);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/parchment/src/blot/text.ts",
    "line": "    this.parent.insertBefore(after, this.next);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/parchment/src/collection/linked-list.ts",
    "line": "  append(...nodes: T[]): void {",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/parchment/src/collection/linked-list.ts",
    "line": "    this.insertBefore(nodes[0], null);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/parchment/src/collection/linked-list.ts",
    "line": "  insertBefore(node: T | null, refNode: T | null): void {",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/parse-entities/decode-entity.browser.js",
    "line": "  el.innerHTML = entity",
    "reasonCategory": "usageTrusted",
    "updated": "2020-08-25T16:59:46.588Z",
    "reasonDetail": "Ephemeral element"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/parse-json/index.js",
    "line": "\tfileName: errorEx.append('in %s'),",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/parse-json/index.js",
    "line": "\tcodeFrame: errorEx.append('\\n\\n%s\\n')",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-insertAfter(",
    "path": "node_modules/parse5/lib/parser/index.js",
    "line": "    p.openElements.insertAfter(furthestBlock, newElement);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/parse5/lib/parser/index.js",
    "line": "            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-insertAfter(",
    "path": "node_modules/parse5/lib/parser/open-element-stack.js",
    "line": "    insertAfter(referenceElement, newElement) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/parse5/lib/tree-adapters/default.js",
    "line": "        insertBefore(parentNode, createTextNode(text), referenceNode);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/picomatch/lib/parse.js",
    "line": "    if (tok.value || tok.output) append(tok);",
    "reasonCategory": "falseMatch",
    "updated": "2020-02-21T14:09:28.005Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/picomatch/lib/parse.js",
    "line": "      append({ value });",
    "reasonCategory": "falseMatch",
    "updated": "2021-04-06T04:01:59.934Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/picomatch/lib/parse.js",
    "line": "      append({ value });",
    "reasonCategory": "falseMatch",
    "updated": "2021-12-01T01:35:52.592Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/picomatch/lib/parse.js",
    "line": "      append({ value });",
    "reasonCategory": "falseMatch",
    "updated": "2021-12-01T01:35:52.592Z"
  },
  {
    "rule": "thenify-multiArgs",
    "path": "node_modules/pify/index.js",
    "line": "\t\t\t\tif (opts.multiArgs) {",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-19T18:06:35.446Z"
  },
  {
    "rule": "thenify-multiArgs",
    "path": "node_modules/pify/index.js",
    "line": "\t\t\t\tif (opts.multiArgs) {",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-19T18:06:35.446Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/pino/browser.js",
    "line": "  wrap(opts, logger, level)",
    "reasonCategory": "falseMatch",
    "updated": "2021-03-09T20:56:35.403Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/prompts/dist/elements/autocomplete.js",
    "line": "        desc = '\\n' + wrap(v.description, {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/prompts/dist/elements/multiselect.js",
    "line": "          desc = '\\n' + wrap(v.description, {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/prompts/dist/elements/select.js",
    "line": "              desc = '\\n' + wrap(v.description, {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/prompts/lib/elements/autocomplete.js",
    "line": "        desc = '\\n' + wrap(v.description, { margin: 3, width: this.out.columns })",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/prompts/lib/elements/multiselect.js",
    "line": "          desc = '\\n' + wrap(v.description, { margin: prefix.length, width: this.out.columns });",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/prompts/lib/elements/select.js",
    "line": "              desc = '\\n' + wrap(v.description, { margin: 3, width: this.out.columns });",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "eval",
    "path": "node_modules/protobufjs/dist/light/protobuf.js",
    "line": "        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval",
    "reasonCategory": "usageTrusted",
    "updated": "2019-03-09T00:08:44.242Z",
    "reasonDetail": "Eval is used here to produce and evaluate the expression 'require'"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/protobufjs/dist/light/protobuf.js",
    "line": "// function load(filename:string, callback:LoadCallback):undefined",
    "reasonCategory": "exampleCode",
    "updated": "2019-03-09T00:08:44.242Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/protobufjs/dist/light/protobuf.js",
    "line": "// function load(filename:string, [root:Root]):Promise<Root>",
    "reasonCategory": "exampleCode",
    "updated": "2019-03-09T00:08:44.242Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/protobufjs/dist/light/protobuf.js",
    "line": "// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined",
    "reasonCategory": "exampleCode",
    "updated": "2019-03-09T00:08:44.242Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/protobufjs/dist/light/protobuf.js",
    "line": "// function load(filename:string, callback:LoadCallback):undefined",
    "reasonCategory": "exampleCode",
    "updated": "2019-03-09T00:08:44.242Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/protobufjs/dist/light/protobuf.js",
    "line": "// function load(filename:string, [options:IParseOptions]):Promise<Root>",
    "reasonCategory": "exampleCode",
    "updated": "2019-03-09T00:08:44.242Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/protobufjs/dist/light/protobuf.js",
    "line": "function load(filename, root, callback) {",
    "reasonCategory": "falseMatch",
    "updated": "2019-03-09T00:08:44.242Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/protobufjs/dist/light/protobuf.js",
    "line": "    return root.load(filename, callback);",
    "reasonCategory": "falseMatch",
    "updated": "2019-03-09T00:08:44.242Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/protobufjs/dist/light/protobuf.js",
    "line": "Root.prototype.load = function load(filename, options, callback) {",
    "reasonCategory": "falseMatch",
    "updated": "2019-03-09T00:08:44.242Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/protobufjs/dist/light/protobuf.js",
    "line": "    return this.load(filename, options, SYNC);",
    "reasonCategory": "falseMatch",
    "updated": "2019-03-09T00:08:44.242Z"
  },
  {
    "rule": "eval",
    "path": "node_modules/protobufjs/dist/light/protobuf.min.js",
    "reasonCategory": "usageTrusted",
    "updated": "2018-09-18T19:19:27.699Z",
    "reasonDetail": "Hard-coded string"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/protobufjs/dist/light/protobuf.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-18T19:19:27.699Z"
  },
  {
    "rule": "eval",
    "path": "node_modules/protobufjs/dist/minimal/protobuf.js",
    "line": "        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval",
    "reasonCategory": "usageTrusted",
    "updated": "2019-03-09T00:08:44.242Z",
    "reasonDetail": "Eval is used here to produce and evaluate the expression 'require'"
  },
  {
    "rule": "eval",
    "path": "node_modules/protobufjs/dist/minimal/protobuf.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-18T19:19:27.699Z",
    "reasonDetail": "Inside of regular expression"
  },
  {
    "rule": "eval",
    "path": "node_modules/protobufjs/dist/protobuf.js",
    "line": "        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval",
    "reasonCategory": "usageTrusted",
    "updated": "2019-03-09T00:08:44.242Z",
    "reasonDetail": "Eval is used here to produce and evaluate the expression 'require'"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/protobufjs/dist/protobuf.js",
    "line": "// function load(filename:string, callback:LoadCallback):undefined",
    "reasonCategory": "exampleCode",
    "updated": "2019-03-09T00:08:44.242Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/protobufjs/dist/protobuf.js",
    "line": "// function load(filename:string, [root:Root]):Promise<Root>",
    "reasonCategory": "exampleCode",
    "updated": "2019-03-09T00:08:44.242Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/protobufjs/dist/protobuf.js",
    "line": "// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined",
    "reasonCategory": "exampleCode",
    "updated": "2019-03-09T00:08:44.242Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/protobufjs/dist/protobuf.js",
    "line": "// function load(filename:string, callback:LoadCallback):undefined",
    "reasonCategory": "exampleCode",
    "updated": "2019-03-09T00:08:44.242Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/protobufjs/dist/protobuf.js",
    "line": "// function load(filename:string, [options:IParseOptions]):Promise<Root>",
    "reasonCategory": "exampleCode",
    "updated": "2019-03-09T00:08:44.242Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/protobufjs/dist/protobuf.js",
    "line": "function load(filename, root, callback) {",
    "reasonCategory": "falseMatch",
    "updated": "2019-03-09T00:08:44.242Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/protobufjs/dist/protobuf.js",
    "line": "    return root.load(filename, callback);",
    "reasonCategory": "falseMatch",
    "updated": "2019-03-09T00:08:44.242Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/protobufjs/dist/protobuf.js",
    "line": "Root.prototype.load = function load(filename, options, callback) {",
    "reasonCategory": "falseMatch",
    "updated": "2019-03-09T00:08:44.242Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/protobufjs/dist/protobuf.js",
    "line": "    return this.load(filename, options, SYNC);",
    "reasonCategory": "falseMatch",
    "updated": "2019-03-09T00:08:44.242Z"
  },
  {
    "rule": "eval",
    "path": "node_modules/protobufjs/dist/protobuf.min.js",
    "reasonCategory": "usageTrusted",
    "updated": "2018-09-18T19:19:27.699Z",
    "reasonDetail": "Hard-coded string"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/protobufjs/dist/protobuf.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-18T19:19:27.699Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/protobufjs/src/index-light.js",
    "line": "function load(filename, root, callback) {",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-15T00:38:04.183Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/protobufjs/src/index-light.js",
    "line": "    return root.load(filename, callback);",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-15T00:38:04.183Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/protobufjs/src/index-light.js",
    "line": "// function load(filename:string, callback:LoadCallback):undefined",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-15T00:38:04.183Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/protobufjs/src/index-light.js",
    "line": "// function load(filename:string, [root:Root]):Promise<Root>",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-15T00:38:04.183Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/protobufjs/src/root.js",
    "line": "Root.prototype.load = function load(filename, options, callback) {",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-15T00:38:04.183Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/protobufjs/src/root.js",
    "line": "// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-15T00:38:04.183Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/protobufjs/src/root.js",
    "line": "// function load(filename:string, callback:LoadCallback):undefined",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-15T00:38:04.183Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/protobufjs/src/root.js",
    "line": "// function load(filename:string, [options:IParseOptions]):Promise<Root>",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-15T00:38:04.183Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/protobufjs/src/root.js",
    "line": "    return this.load(filename, options, SYNC);",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-15T00:38:04.183Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/proxy-agent/node_modules/debug/src/browser.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-11T21:58:24.827Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/proxy-agent/node_modules/debug/src/common.js",
    "line": "\tcreateDebug.enable(createDebug.load());",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-11T21:58:24.827Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/proxy-agent/node_modules/debug/src/node.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-11T21:58:24.827Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/pumpify/node_modules/duplexify/index.js",
    "line": "  return new (stream.Readable)({objectMode:true, highWaterMark:16}).wrap(rs)",
    "reasonCategory": "falseMatch",
    "updated": "2022-03-22T19:29:46.099Z"
  },
  {
    "rule": "DOM-document.write(",
    "path": "node_modules/qrcode-generator/sample.js",
    "line": "  document.write(create_qrcode(text, typeNumber, errorCorrectionLevel) );",
    "reasonCategory": "notExercisedByOurApp",
    "updated": "2022-01-04T20:32:10.596Z",
    "reasonDetail": "Sample code never required by us."
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/qrcode-generator/sample.js",
    "line": "  document.getElementById('qr').innerHTML =",
    "reasonCategory": "notExercisedByOurApp",
    "updated": "2022-01-04T20:32:10.596Z",
    "reasonDetail": "Sample code never required by us."
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/blots/block.js",
    "line": "      this.parent.insertBefore(block, index === 0 ? this : this.next);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/blots/block.js",
    "line": "  insertBefore(blot, ref) {",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/blots/block.js",
    "line": "    super.insertBefore(blot, ref);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/blots/block.js",
    "line": "        this.parent.insertBefore(clone, this);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/blots/block.js",
    "line": "        this.parent.insertBefore(clone, this.next);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/blots/cursor.js",
    "line": "        this.parent.insertBefore(Parchment.create(this.textNode), this);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/blots/cursor.js",
    "line": "      this.domNode.parentNode.insertBefore(this.domNode.lastChild, this.domNode);",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/blots/embed.js",
    "line": "        this.parent.insertBefore(Parchment.create(textNode), this);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/blots/embed.js",
    "line": "        this.parent.insertBefore(Parchment.create(textNode), this.next);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/quill/blots/inline.js",
    "line": "        blot.wrap(name, value);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/quill/blots/inline.js",
    "line": "      parent.wrap(this);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/blots/scroll.js",
    "line": "  insertBefore(blot, ref) {",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/blots/scroll.js",
    "line": "    super.insertBefore(blot, ref);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/core/quill.js",
    "line": "    let html = this.container.innerHTML.trim();",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/core/quill.js",
    "line": "    this.container.innerHTML = '';",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/core/quill.js",
    "line": "    this.container.insertBefore(container, refNode);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/core/selection.js",
    "line": "        blot.parent.insertBefore(this.cursor, after);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/core/selection.js",
    "line": "        blot.insertBefore(this.cursor, nativeRange.start.node);  // Should never happen",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "    var html = this.container.innerHTML.trim();",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "    this.container.innerHTML = '';",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "        this.container.innerHTML = html.replace(/\\>\\r?\\n +\\</g, '><'); // Remove spaces between tags",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "        this.container.innerHTML = '';",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "      debug.log('convert', this.container.innerHTML, delta);",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "      this.container.innerHTML = '';",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "        this.parent.insertBefore(block, index === 0 ? this : this.next);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "    value: function insertBefore(blot, ref) {",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "          this.parent.insertBefore(clone, this);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "          this.parent.insertBefore(clone, this.next);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "      this.container.insertBefore(container, refNode);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "          blot.parent.insertBefore(this.cursor, after);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "          blot.insertBefore(this.cursor, nativeRange.start.node); // Should never happen",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "        this.insertBefore(other);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "                _this.insertBefore(child, _this.children.head || undefined);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "            targetParent.insertBefore(child, refNode);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "        this.parent.insertBefore(after, this.next);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "                _this.insertBefore(blot, refBlot || undefined);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "    value: function insertBefore(blot, ref) {",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "          this.parent.insertBefore(_parchment2.default.create(this.textNode), this);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "        this.parent.insertBefore(blot, ref);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "        parentBlot.children.insertBefore(this, refBlot);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "        target.parent.insertBefore(this, target.next);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "            this.parent.insertBefore(wrapper, this.next);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "          this.parent.insertBefore(_parchment2.default.create(textNode), this);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "          this.parent.insertBefore(_parchment2.default.create(textNode), this.next);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "        this.insertBefore(nodes[0], null);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "            after.parent.insertBefore(blot, after);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "        this.parent.insertBefore(after, this.next);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "        this.domNode.parentNode.insertBefore(this.domNode.lastChild, this.domNode);",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "            parentBlot.domNode.insertBefore(this.domNode, refDomNode);",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "          blot.wrap(name, value);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "        parent.wrap(this);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "            blot.wrap(name, value);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "            blot.wrap(parent);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/quill/dist/quill.core.js",
    "line": "                    child = child.wrap(InlineBlot.blotName, true);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/dist/quill.js",
    "line": "    var html = this.container.innerHTML.trim();",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/dist/quill.js",
    "line": "    this.container.innerHTML = '';",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/dist/quill.js",
    "line": "      label.innerHTML = _dropdown2.default;",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/dist/quill.js",
    "line": "            button.innerHTML = icons[name][''] + icons[name]['rtl'];",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/dist/quill.js",
    "line": "            button.innerHTML = icons[name];",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/dist/quill.js",
    "line": "              button.innerHTML = icons[name][value];",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/dist/quill.js",
    "line": "        this.container.innerHTML = html.replace(/\\>\\r?\\n +\\</g, '><'); // Remove spaces between tags",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/dist/quill.js",
    "line": "        this.container.innerHTML = '';",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/dist/quill.js",
    "line": "      debug.log('convert', this.container.innerHTML, delta);",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/dist/quill.js",
    "line": "      this.container.innerHTML = '';",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/dist/quill.js",
    "line": "    _this.label.innerHTML = label;",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/dist/quill.js",
    "line": "      item.innerHTML = icons[item.getAttribute('data-value') || ''];",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/dist/quill.js",
    "line": "      this.label.innerHTML = item.innerHTML;",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/dist/quill.js",
    "line": "    this.root.innerHTML = this.constructor.TEMPLATE;",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/dist/quill.js",
    "line": "          this.domNode.innerHTML = _highlight(text);",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "        this.parent.insertBefore(block, index === 0 ? this : this.next);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "    value: function insertBefore(blot, ref) {",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "          this.parent.insertBefore(clone, this);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "          this.parent.insertBefore(clone, this.next);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "      this.container.insertBefore(container, refNode);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "          blot.parent.insertBefore(this.cursor, after);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "          blot.insertBefore(this.cursor, nativeRange.start.node); // Should never happen",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "        this.insertBefore(other);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "                _this.insertBefore(child, _this.children.head || undefined);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "            targetParent.insertBefore(child, refNode);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "        this.parent.insertBefore(after, this.next);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "                _this.insertBefore(blot, refBlot || undefined);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "    value: function insertBefore(blot, ref) {",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "          this.parent.insertBefore(_parchment2.default.create(this.textNode), this);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "        this.parent.insertBefore(blot, ref);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "        parentBlot.children.insertBefore(this, refBlot);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "        target.parent.insertBefore(this, target.next);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "            this.parent.insertBefore(wrapper, this.next);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "          this.parent.insertBefore(_parchment2.default.create(textNode), this);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "          this.parent.insertBefore(_parchment2.default.create(textNode), this.next);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "        this.insertBefore(nodes[0], null);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "            after.parent.insertBefore(blot, after);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "        this.parent.insertBefore(after, this.next);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "    value: function insertBefore(blot, ref) {",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "        after.parent.insertBefore(blot, after);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "        this.domNode.parentNode.insertBefore(this.domNode.lastChild, this.domNode);",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "    this.select.parentNode.insertBefore(this.container, this.select);",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "            parentBlot.domNode.insertBefore(this.domNode, refDomNode);",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "      quill.container.parentNode.insertBefore(container, quill.container);",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "          blot.wrap(name, value);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "        parent.wrap(this);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "            blot.wrap(name, value);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "            blot.wrap(parent);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/quill/dist/quill.js",
    "line": "                    child = child.wrap(InlineBlot.blotName, true);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/dist/quill.min.js",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/dist/quill.min.js",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/quill/dist/quill.min.js",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/formats/list.js",
    "line": "  insertBefore(blot, ref) {",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/formats/list.js",
    "line": "      super.insertBefore(blot, ref);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/formats/list.js",
    "line": "      after.parent.insertBefore(blot, after);",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/modules/clipboard.js",
    "line": "      this.container.innerHTML = html.replace(/\\>\\r?\\n +\\</g, '><'); // Remove spaces between tags",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/modules/clipboard.js",
    "line": "      this.container.innerHTML = '';",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/modules/clipboard.js",
    "line": "    this.container.innerHTML = '';",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/modules/clipboard.js",
    "line": "    debug.log('convert', this.container.innerHTML, delta);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-12-01T01:31:12.757Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/modules/syntax.js",
    "line": "        this.domNode.innerHTML = highlight(text);",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/modules/toolbar.js",
    "line": "      quill.container.parentNode.insertBefore(container, quill.container);",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/themes/base.js",
    "line": "          button.innerHTML = icons[name][''] + icons[name]['rtl'];",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/themes/base.js",
    "line": "          button.innerHTML = icons[name];",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/themes/base.js",
    "line": "            button.innerHTML = icons[name][value];",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/ui/color-picker.js",
    "line": "    this.label.innerHTML = label;",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/ui/icon-picker.js",
    "line": "      item.innerHTML = icons[item.getAttribute('data-value') || ''];",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/ui/icon-picker.js",
    "line": "    this.label.innerHTML = item.innerHTML;",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/ui/picker.js",
    "line": "    label.innerHTML = DropdownIcon;",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/quill/ui/picker.js",
    "line": "    this.select.parentNode.insertBefore(this.container, this.select);",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/quill/ui/tooltip.js",
    "line": "    this.root.innerHTML = this.constructor.TEMPLATE;",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/react-blurhash/docs/demo.1d83eeb63aeb90e0cf0e.js",
    "reasonCategory": "notExercisedByOurApp",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/react-blurhash/docs/demo.1d83eeb63aeb90e0cf0e.js",
    "reasonCategory": "notExercisedByOurApp",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "React-dangerouslySetInnerHTML",
    "path": "node_modules/react-blurhash/docs/demo.1d83eeb63aeb90e0cf0e.js",
    "reasonCategory": "notExercisedByOurApp",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "React-dangerouslySetInnerHTML",
    "path": "node_modules/react-blurhash/docs/demo.1d83eeb63aeb90e0cf0e.js",
    "reasonCategory": "notExercisedByOurApp",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "React-dangerouslySetInnerHTML",
    "path": "node_modules/react-blurhash/docs/demo.1d83eeb63aeb90e0cf0e.js",
    "reasonCategory": "notExercisedByOurApp",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "React-ref",
    "path": "node_modules/react-blurhash/docs/demo.1d83eeb63aeb90e0cf0e.js",
    "reasonCategory": "notExercisedByOurApp",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "React-ref",
    "path": "node_modules/react-blurhash/docs/demo.1d83eeb63aeb90e0cf0e.js",
    "reasonCategory": "notExercisedByOurApp",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/react-blurhash/docs/demo.1d83eeb63aeb90e0cf0e.js",
    "reasonCategory": "notExercisedByOurApp",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/react-blurhash/docs/demo.1d83eeb63aeb90e0cf0e.js",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/react-blurhash/docs/demo.1d83eeb63aeb90e0cf0e.js",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/react-blurhash/docs/demo.1d83eeb63aeb90e0cf0e.js",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/react-colorful/dist/index.esmodule.js",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/react-colorful/dist/index.esmodule.js",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/react-colorful/dist/index.js",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/react-colorful/dist/index.js",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/react-colorful/dist/index.module.js",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/react-colorful/dist/index.umd.js",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/react-colorful/dist/index.umd.js",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/react-inspector/dist/cjs/react-inspector.js",
    "line": "    return regenerator.wrap(function objectIterator$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/react-inspector/dist/cjs/react-inspector.js",
    "line": "  return regenerator.wrap(function domIterator$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/react-inspector/dist/cjs/react-inspector.js",
    "line": "    function wrap(innerFn, outerFn, self, tryLocsList) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/react-inspector/dist/cjs/react-inspector.js",
    "line": "      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/react-inspector/dist/cjs/react-inspector.js",
    "line": "    return regenerator.wrap(function objectIterator$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/react-inspector/dist/cjs/react-inspector.js",
    "line": "  return regenerator.wrap(function domIterator$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/react-inspector/dist/es/react-inspector.js",
    "line": "    return regenerator.wrap(function objectIterator$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/react-inspector/dist/es/react-inspector.js",
    "line": "  return regenerator.wrap(function domIterator$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/react-inspector/dist/es/react-inspector.js",
    "line": "    function wrap(innerFn, outerFn, self, tryLocsList) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/react-inspector/dist/es/react-inspector.js",
    "line": "      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/react-inspector/dist/es/react-inspector.js",
    "line": "    return regenerator.wrap(function objectIterator$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/react-inspector/dist/es/react-inspector.js",
    "line": "  return regenerator.wrap(function domIterator$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "React-createRef",
    "path": "node_modules/react-inspector/dist/umd/react-inspector.js",
    "line": "function createRef() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "React-createRef",
    "path": "node_modules/react-inspector/dist/umd/react-inspector.js",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/react-inspector/dist/umd/react-inspector.js",
    "line": "var useLayoutEffect=function(a,b){return Z().useLayoutEffect(a,b)};var useMemo=function(a,b){return Z().useMemo(a,b)};var useReducer=function(a,b,c){return Z().useReducer(a,b,c)};var useRef=function(a){return Z().useRef(a)};var useState=function(a){return Z().useState(a)};var version=\"16.14.0\";",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/react-inspector/dist/umd/react-inspector.js",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/react-inspector/dist/umd/react-inspector.js",
    "line": "function useRef(initialValue) {",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/react-inspector/dist/umd/react-inspector.js",
    "line": "  return dispatcher.useRef(initialValue);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/react-inspector/dist/umd/react-inspector.js",
    "line": "    return regenerator.wrap(function objectIterator$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/react-inspector/dist/umd/react-inspector.js",
    "line": "  return regenerator.wrap(function domIterator$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/react-inspector/dist/umd/react-inspector.js",
    "line": "  function wrap(innerFn, outerFn, self, tryLocsList) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/react-inspector/dist/umd/react-inspector.js",
    "line": "      wrap(innerFn, outerFn, self, tryLocsList),",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/react-inspector/dist/umd/react-inspector.js",
    "line": "    return regenerator.wrap(function objectIterator$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/react-inspector/dist/umd/react-inspector.js",
    "line": "  return regenerator.wrap(function domIterator$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/react-inspector/node_modules/regenerator-runtime/runtime.js",
    "line": "  function wrap(innerFn, outerFn, self, tryLocsList) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/react-inspector/node_modules/regenerator-runtime/runtime.js",
    "line": "      wrap(innerFn, outerFn, self, tryLocsList),",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/react-quill/dist/react-quill.js",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for react-quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/react-quill/dist/react-quill.js",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for react-quill"
  },
  {
    "rule": "React-findDOMNode",
    "path": "node_modules/react-quill/dist/react-quill.js",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for react-quill"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/react-quill/dist/react-quill.js",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for react-quill"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/react-quill/dist/react-quill.js",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "not jquery"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/react-quill/lib/index.js",
    "line": "                (_b = (_a = _this).onEditorChangeText) === null || _b === void 0 ? void 0 : _b.call(_a, _this.editor.root.innerHTML, rangeOrDelta, source, _this.unprivilegedEditor);",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for react-quill"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "node_modules/react-quill/lib/index.js",
    "line": "            getHTML: function () { return e.root.innerHTML; },",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for react-quill"
  },
  {
    "rule": "React-findDOMNode",
    "path": "node_modules/react-quill/lib/index.js",
    "line": "        var element = react_dom_1.default.findDOMNode(this.editingArea);",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-13T18:36:57.012Z",
    "reasonDetail": "necessary for react-quill"
  },
  {
    "rule": "jQuery-insertAfter(",
    "path": "node_modules/react-refresh/cjs/react-refresh-babel.development.js",
    "line": "            insertAfterPath.insertAfter(t.expressionStatement(t.assignmentExpression('=', handle, targetExpr)));",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-insertAfter(",
    "path": "node_modules/react-refresh/cjs/react-refresh-babel.development.js",
    "line": "          insertAfterPath.insertAfter(t.expressionStatement(t.callExpression(sigCallID, createArgumentsForSignature(id, signature, insertAfterPath.scope))));",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-insertAfter(",
    "path": "node_modules/react-refresh/cjs/react-refresh-babel.development.js",
    "line": "            insertAfterPath.insertAfter(t.expressionStatement(t.callExpression(sigCallID, createArgumentsForSignature(path.parent.id, signature, insertAfterPath.scope)))); // Result: let Foo = () => {}; __signature(Foo, ...);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-insertAfter(",
    "path": "node_modules/react-refresh/cjs/react-refresh-babel.development.js",
    "line": "            insertAfterPath.insertAfter(t.expressionStatement(t.assignmentExpression('=', handle, declPath.node.id))); // Result: let Foo = () => {}; _c1 = Foo;",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-insertAfter(",
    "path": "node_modules/react-refresh/cjs/react-refresh-babel.production.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-insertAfter(",
    "path": "node_modules/react-refresh/cjs/react-refresh-babel.production.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-insertAfter(",
    "path": "node_modules/react-refresh/cjs/react-refresh-babel.production.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-insertAfter(",
    "path": "node_modules/react-refresh/cjs/react-refresh-babel.production.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "React-findDOMNode",
    "path": "node_modules/react-sizeme/dist/react-sizeme.js",
    "line": "          var found = this.element && ReactDOM__default['default'].findDOMNode(this.element);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "React-findDOMNode",
    "path": "node_modules/react-sizeme/dist/react-sizeme.min.js",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/react-syntax-highlighter/dist/cjs/async-languages/create-language-async-loader.js",
    "line": "      return _regenerator[\"default\"].wrap(function _callee$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/react-syntax-highlighter/dist/cjs/async-languages/create-language-async-loader.js",
    "line": "      return _regenerator[\"default\"].wrap(function _callee$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/react-syntax-highlighter/dist/cjs/async-syntax-highlighter.js",
    "line": "          return _regenerator[\"default\"].wrap(function _callee$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/react-syntax-highlighter/dist/cjs/async-syntax-highlighter.js",
    "line": "          return _regenerator[\"default\"].wrap(function _callee$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/react-syntax-highlighter/dist/esm/async-languages/create-language-async-loader.js",
    "line": "      return _regeneratorRuntime.wrap(function _callee$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/react-syntax-highlighter/dist/esm/async-languages/create-language-async-loader.js",
    "line": "      return _regeneratorRuntime.wrap(function _callee$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/react-syntax-highlighter/dist/esm/async-syntax-highlighter.js",
    "line": "          return _regeneratorRuntime.wrap(function _callee$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/react-syntax-highlighter/dist/esm/async-syntax-highlighter.js",
    "line": "          return _regeneratorRuntime.wrap(function _callee$(_context) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/react-textarea-autosize/dist/react-textarea-autosize.browser.cjs.js",
    "line": "  var libRef = React.useRef(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-16T23:23:32.306Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/react-textarea-autosize/dist/react-textarea-autosize.browser.cjs.js",
    "line": "  var heightRef = React.useRef(0);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-16T23:23:32.306Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/react-textarea-autosize/dist/react-textarea-autosize.browser.cjs.js",
    "line": "  var measurementsCacheRef = React.useRef();",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-16T23:23:32.306Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/react-textarea-autosize/dist/react-textarea-autosize.browser.esm.js",
    "line": "  var libRef = useRef(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-16T23:23:32.306Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/react-textarea-autosize/dist/react-textarea-autosize.browser.esm.js",
    "line": "  var heightRef = useRef(0);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-16T23:23:32.306Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/react-textarea-autosize/dist/react-textarea-autosize.browser.esm.js",
    "line": "  var measurementsCacheRef = useRef();",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-16T23:23:32.306Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/react-textarea-autosize/dist/react-textarea-autosize.cjs.dev.js",
    "line": "  var libRef = React.useRef(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-16T23:23:32.306Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/react-textarea-autosize/dist/react-textarea-autosize.cjs.dev.js",
    "line": "  var heightRef = React.useRef(0);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-16T23:23:32.306Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/react-textarea-autosize/dist/react-textarea-autosize.cjs.dev.js",
    "line": "  var measurementsCacheRef = React.useRef();",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-16T23:23:32.306Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/react-textarea-autosize/dist/react-textarea-autosize.cjs.prod.js",
    "line": "  var libRef = React.useRef(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-16T23:23:32.306Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/react-textarea-autosize/dist/react-textarea-autosize.cjs.prod.js",
    "line": "  var heightRef = React.useRef(0);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-16T23:23:32.306Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/react-textarea-autosize/dist/react-textarea-autosize.cjs.prod.js",
    "line": "  var measurementsCacheRef = React.useRef();",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-16T23:23:32.306Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/react-textarea-autosize/dist/react-textarea-autosize.esm.js",
    "line": "  var libRef = useRef(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-16T23:23:32.306Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/react-textarea-autosize/dist/react-textarea-autosize.esm.js",
    "line": "  var heightRef = useRef(0);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-16T23:23:32.306Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/react-textarea-autosize/dist/react-textarea-autosize.esm.js",
    "line": "  var measurementsCacheRef = useRef();",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-16T23:23:32.306Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/react-textarea-autosize/node_modules/regenerator-runtime/runtime.js",
    "line": "  function wrap(innerFn, outerFn, self, tryLocsList) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-16T23:23:32.306Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/react-textarea-autosize/node_modules/regenerator-runtime/runtime.js",
    "line": "      wrap(innerFn, outerFn, self, tryLocsList),",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-16T23:23:32.306Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/redux/node_modules/regenerator-runtime/runtime.js",
    "line": "  function wrap(innerFn, outerFn, self, tryLocsList) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/redux/node_modules/regenerator-runtime/runtime.js",
    "line": "      wrap(innerFn, outerFn, self, tryLocsList),",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/regenerate/regenerate.js",
    "line": "\t\t\t//     $()*+./?[\\]^{|}",
    "reasonCategory": "falseMatch",
    "updated": "2019-12-13T17:08:12.581Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/regenerator-runtime/runtime.js",
    "line": "  function wrap(innerFn, outerFn, self, tryLocsList) {",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-19T18:13:29.628Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/regenerator-runtime/runtime.js",
    "line": "      wrap(innerFn, outerFn, self, tryLocsList),",
    "reasonCategory": "falseMatch",
    "updated": "2019-12-11T01:10:06.091Z"
  },
  {
    "rule": "jQuery-before(",
    "path": "node_modules/remark-footnotes/index.js",
    "line": "    before(inlineMethods, 'reference', 'inlineNote')",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-before(",
    "path": "node_modules/remark-footnotes/index.js",
    "line": "  before(blockMethods, 'definition', 'footnoteDefinition')",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-before(",
    "path": "node_modules/remark-footnotes/index.js",
    "line": "  before(inlineMethods, 'reference', 'footnoteCall')",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-before(",
    "path": "node_modules/remark-footnotes/index.js",
    "line": "function before(list, before, value) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/remark-mdx/index.js",
    "line": "  blocks.html = wrap(block)",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/remark-mdx/index.js",
    "line": "  inlines.html = wrap(inlines.html, inlineJsx)",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/remark-mdx/index.js",
    "line": "  function wrap(original, customTokenizer) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-insertAfter(",
    "path": "node_modules/remark-mdx/node_modules/@babel/plugin-proposal-object-rest-spread/lib/index.js",
    "line": "          insertionPath.insertAfter(_core.types.variableDeclarator(argument, callExpression));",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-insertAfter(",
    "path": "node_modules/remark-mdx/node_modules/@babel/plugin-proposal-object-rest-spread/lib/index.js",
    "line": "        path.insertAfter(_core.types.exportNamedDeclaration(null, specifiers));",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-insertAfter(",
    "path": "node_modules/remark-mdx/node_modules/@babel/plugin-proposal-object-rest-spread/lib/index.js",
    "line": "          statementPath.insertAfter(_core.types.variableDeclaration(statementPath.node.kind || \"var\", objectPatterns));",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/remark-mdx/node_modules/@babel/plugin-proposal-object-rest-spread/lib/index.js",
    "line": "            originalPath.insertBefore(_core.types.variableDeclarator(initRef, originalPath.node.init));",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/remark-mdx/node_modules/@babel/plugin-proposal-object-rest-spread/lib/index.js",
    "line": "          insertionPath.insertBefore(impureComputedPropertyDeclarators);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/remark-mdx/node_modules/@babel/plugin-proposal-object-rest-spread/lib/index.js",
    "line": "          insertionPath.insertBefore(impureObjRefComputedDeclarators);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/remark-mdx/node_modules/@babel/plugin-syntax-object-rest-spread/node_modules/@babel/core/lib/vendor/import-meta-resolve.js",
    "line": "    load(arr) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/remark-mdx/node_modules/@babel/plugin-transform-parameters/lib/rest.js",
    "line": "    target.insertBefore(loop);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/remark-mdx/node_modules/@babel/plugin-transform-parameters/node_modules/@babel/core/lib/vendor/import-meta-resolve.js",
    "line": "    load(arr) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/remark-mdx/node_modules/debug/src/browser.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/remark-mdx/node_modules/debug/src/common.js",
    "line": "\tcreateDebug.enable(createDebug.load());",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/remark-mdx/node_modules/debug/src/node.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/remark-mdx/node_modules/resolve/lib/async.js",
    "line": "        load(exts, x, loadAsFilePackage);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/remark-mdx/node_modules/resolve/lib/async.js",
    "line": "        function load(exts, x, loadPackage) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/remark-mdx/node_modules/resolve/lib/async.js",
    "line": "                    if (r) return load(",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/remark-mdx/node_modules/resolve/lib/async.js",
    "line": "                load(exts.slice(1), x, pkg);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/remark-mdx/node_modules/source-map/dist/source-map.debug.js",
    "line": "\t      this.prepend(aChunk[i]);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/remark-mdx/node_modules/source-map/dist/source-map.js",
    "line": "\t      this.prepend(aChunk[i]);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/remark-mdx/node_modules/source-map/dist/source-map.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/remark-mdx/node_modules/source-map/lib/source-node.js",
    "line": "      this.prepend(aChunk[i]);",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "jQuery-insertBefore(",
    "path": "node_modules/resolve-url/resolve-url.js",
    "line": "    head.insertBefore(base, head.firstChild)",
    "reasonCategory": "falseMatch",
    "updated": "2020-04-30T22:45:07.878Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/signal-exit/index.js",
    "line": "    load()",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-15T00:38:04.183Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/socks-proxy-agent/node_modules/debug/src/browser.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-11T21:58:24.827Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/socks-proxy-agent/node_modules/debug/src/common.js",
    "line": "\tcreateDebug.enable(createDebug.load());",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-11T21:58:24.827Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/socks-proxy-agent/node_modules/debug/src/node.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-11T21:58:24.827Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/socks/build/client/socksclient.js",
    "line": "        this.receiveBuffer.append(data);",
    "reasonCategory": "falseMatch",
    "updated": "2021-11-13T01:24:25.496Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/socks/build/common/receivebuffer.js",
    "line": "    append(data) {",
    "reasonCategory": "falseMatch",
    "updated": "2018-11-27T18:02:26.186Z"
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/source-map-js/lib/source-node.js",
    "line": "      this.prepend(aChunk[i]);",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-11T16:23:37.435Z"
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/source-map-support/browser-source-map-support.js",
    "reasonCategory": "falseMatch",
    "updated": "2019-03-13T01:27:05.473Z"
  },
  {
    "rule": "eval",
    "path": "node_modules/source-map-support/source-map-support.js",
    "line": "  // Most eval() calls are in this format",
    "reasonCategory": "falseMatch",
    "updated": "2020-04-30T22:35:27.860Z"
  },
  {
    "rule": "eval",
    "path": "node_modules/source-map-support/source-map-support.js",
    "line": "  // Parse nested eval() calls using recursion",
    "reasonCategory": "falseMatch",
    "updated": "2020-04-30T22:35:27.860Z"
  },
  {
    "rule": "eval",
    "path": "node_modules/source-map-support/source-map-support.js",
    "line": "  // passed to eval() ending in \"//# sourceURL=...\" will return the source file",
    "reasonCategory": "falseMatch",
    "updated": "2020-04-30T22:35:27.860Z"
  },
  {
    "rule": "eval",
    "path": "node_modules/source-map-support/source-map-support.js",
    "line": "  // Code called using eval() needs special handling",
    "reasonCategory": "falseMatch",
    "updated": "2020-04-30T22:35:27.860Z"
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/source-map/dist/source-map.debug.js",
    "line": "\t      this.prepend(aChunk[i]);",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-19T18:13:29.628Z"
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/source-map/dist/source-map.js",
    "line": "\t      this.prepend(aChunk[i]);",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-19T18:13:29.628Z"
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/source-map/dist/source-map.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2021-12-01T01:31:12.757Z"
  },
  {
    "rule": "jQuery-prepend(",
    "path": "node_modules/source-map/lib/source-node.js",
    "line": "      this.prepend(aChunk[i]);",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-19T18:13:29.628Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/sumchecker/node_modules/debug/src/browser.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-11T21:58:24.827Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/sumchecker/node_modules/debug/src/common.js",
    "line": "\tcreateDebug.enable(createDebug.load());",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-11T21:58:24.827Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/sumchecker/node_modules/debug/src/node.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-11T21:58:24.827Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/table/dist/createStream.js",
    "line": "        return append(row, columnWidthIndex, config);",
    "reasonCategory": "falseMatch",
    "updated": "2020-08-26T00:10:28.628Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/tar-stream/extract.js",
    "line": "  else b.append(data)",
    "reasonCategory": "falseMatch",
    "updated": "2020-04-30T22:35:27.860Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/tar-stream/extract.js",
    "line": "    b.append(data)",
    "reasonCategory": "falseMatch",
    "updated": "2021-01-20T22:42:00.662Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/tar-stream/node_modules/bl/BufferList.js",
    "line": "    this.append(buf)",
    "reasonCategory": "falseMatch",
    "updated": "2022-03-22T19:29:46.099Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/tar-stream/node_modules/bl/BufferList.js",
    "line": "    copy.append(this._bufs[i])",
    "reasonCategory": "falseMatch",
    "updated": "2022-03-22T19:29:46.099Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/tar-stream/node_modules/bl/BufferList.js",
    "line": "      this.append(buf[i])",
    "reasonCategory": "falseMatch",
    "updated": "2022-03-22T19:29:46.099Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/tar-stream/node_modules/bl/BufferList.js",
    "line": "      this.append(buf._bufs[i])",
    "reasonCategory": "falseMatch",
    "updated": "2022-03-22T19:29:46.099Z"
  },
  {
    "rule": "jQuery-after(",
    "path": "node_modules/test-exclude/node_modules/braces/index.js",
    "line": "      arr.push(es6 ? tokens.after(val) : val);",
    "reasonCategory": "falseMatch",
    "updated": "2019-07-31T00:19:18.696Z"
  },
  {
    "rule": "jQuery-before(",
    "path": "node_modules/test-exclude/node_modules/braces/index.js",
    "line": "        str = tokens.before(str, es6Regex());",
    "reasonCategory": "falseMatch",
    "updated": "2019-07-31T00:19:18.696Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/test-exclude/node_modules/braces/index.js",
    "line": "      return braces(str.replace(outter, wrap(segs, '|')), opts);",
    "reasonCategory": "falseMatch",
    "updated": "2019-07-31T00:19:18.696Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/test-exclude/node_modules/braces/index.js",
    "line": "      segs[0] = wrap(segs[0], '\\\\');",
    "reasonCategory": "falseMatch",
    "updated": "2019-07-31T00:19:18.696Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/test-exclude/node_modules/braces/index.js",
    "line": "function wrap(val, ch) {",
    "reasonCategory": "falseMatch",
    "updated": "2019-07-31T00:19:18.696Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/test-exclude/node_modules/extglob/index.js",
    "line": "    o[id] = wrap(inner, prefix, opts.escape);",
    "reasonCategory": "falseMatch",
    "updated": "2019-07-31T00:19:18.696Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/test-exclude/node_modules/extglob/index.js",
    "line": "function wrap(inner, prefix, esc) {",
    "reasonCategory": "falseMatch",
    "updated": "2019-07-31T00:19:18.696Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "node_modules/test-exclude/node_modules/parse-json/index.js",
    "line": "\tfileName: errorEx.append('in %s')",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-04T00:50:49.405Z"
  },
  {
    "rule": "thenify-multiArgs",
    "path": "node_modules/test-exclude/node_modules/pify/index.js",
    "line": "\t\t\t\t} else if (opts.multiArgs) {",
    "reasonCategory": "falseMatch",
    "updated": "2021-12-07T23:11:11.870Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/type-check/lib/parse-type.js",
    "line": "    if (in$('->', tokens)) {",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-19T21:59:32.770Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/type-check/lib/parse-type.js",
    "line": "  function in$(x, xs){",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-19T21:59:32.770Z"
  },
  {
    "rule": "jQuery-after(",
    "path": "node_modules/underscore/amd/after.js",
    "line": "  function after(times, func) {",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T18:18:03.022Z"
  },
  {
    "rule": "jQuery-before(",
    "path": "node_modules/underscore/amd/before.js",
    "line": "  function before(times, func) {",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T18:18:03.022Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/underscore/amd/wrap.js",
    "line": "  function wrap(func, wrapper) {",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T18:18:03.022Z"
  },
  {
    "rule": "jQuery-after(",
    "path": "node_modules/underscore/cjs/after.js",
    "line": "function after(times, func) {",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T18:18:03.022Z"
  },
  {
    "rule": "jQuery-before(",
    "path": "node_modules/underscore/cjs/before.js",
    "line": "function before(times, func) {",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T18:18:03.022Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/underscore/cjs/wrap.js",
    "line": "function wrap(func, wrapper) {",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T18:18:03.022Z"
  },
  {
    "rule": "jQuery-after(",
    "path": "node_modules/underscore/modules/after.js",
    "line": "export default function after(times, func) {",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T18:18:03.022Z"
  },
  {
    "rule": "jQuery-before(",
    "path": "node_modules/underscore/modules/before.js",
    "line": "export default function before(times, func) {",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T18:18:03.022Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/underscore/modules/wrap.js",
    "line": "export default function wrap(func, wrapper) {",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T18:18:03.022Z"
  },
  {
    "rule": "jQuery-after(",
    "path": "node_modules/underscore/underscore-esm-min.js",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T18:18:03.022Z"
  },
  {
    "rule": "jQuery-before(",
    "path": "node_modules/underscore/underscore-esm-min.js",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T18:18:03.022Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/underscore/underscore-esm-min.js",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T18:18:03.022Z"
  },
  {
    "rule": "jQuery-after(",
    "path": "node_modules/underscore/underscore-esm.js",
    "line": "function after(times, func) {",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T18:18:03.022Z"
  },
  {
    "rule": "jQuery-before(",
    "path": "node_modules/underscore/underscore-esm.js",
    "line": "function before(times, func) {",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T18:18:03.022Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/underscore/underscore-esm.js",
    "line": "function wrap(func, wrapper) {",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T18:18:03.022Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/underscore/underscore-min.js",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-19T21:59:32.770Z"
  },
  {
    "rule": "jQuery-after(",
    "path": "node_modules/underscore/underscore.js",
    "line": "  function after(times, func) {",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T18:18:03.022Z"
  },
  {
    "rule": "jQuery-before(",
    "path": "node_modules/underscore/underscore.js",
    "line": "  function before(times, func) {",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T18:18:03.022Z"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/underscore/underscore.js",
    "line": "  function wrap(func, wrapper) {",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-07T18:18:03.022Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/uri-js/dist/es5/uri.all.min.js",
    "reasonCategory": "falseMatch",
    "updated": "2020-08-26T00:10:28.628Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/use-composed-ref/dist/use-composed-ref.cjs.js",
    "line": "  var prevUserRef = React.useRef();",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-16T23:23:32.306Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/use-composed-ref/dist/use-composed-ref.esm.js",
    "line": "  var prevUserRef = useRef();",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-16T23:23:32.306Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/use-latest/dist/use-latest.cjs.dev.js",
    "line": "  var ref = React__namespace.useRef(value);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-16T23:23:32.306Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/use-latest/dist/use-latest.cjs.prod.js",
    "line": "  var ref = React__namespace.useRef(value);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-16T23:23:32.306Z"
  },
  {
    "rule": "React-useRef",
    "path": "node_modules/use-latest/dist/use-latest.esm.js",
    "line": "  var ref = React.useRef(value);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-16T23:23:32.306Z"
  },
  {
    "rule": "eval",
    "path": "node_modules/vm2/lib/nodevm.js",
    "line": "\t * @param {boolean} [options.eval=true] - Allow the dynamic evaluation of code via eval(code) or Function(code)().<br>",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-16T15:30:35.122Z",
    "reasonDetail": "falseMatch"
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/vm2/lib/script.js",
    "line": "\twrap(prefix, suffix) {",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-16T15:30:35.122Z"
  },
  {
    "rule": "eval",
    "path": "node_modules/vm2/lib/vm.js",
    "line": "\t * @param {boolean} [options.eval=true] - Allow the dynamic evaluation of code via eval(code) or Function(code)().<br>",
    "reasonCategory": "falseMatch",
    "updated": "2022-02-16T15:30:35.122Z",
    "reasonDetail": "This is a comment."
  },
  {
    "rule": "jQuery-wrap(",
    "path": "node_modules/webpack-log/node_modules/ansi-colors/index.js",
    "line": "  while (n-- > 0) str = wrap(colors.styles[stack[n]], str, nl);",
    "reasonCategory": "falseMatch",
    "updated": "2020-04-30T22:45:07.878Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/webpack-virtual-modules/node_modules/debug/src/browser.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/webpack-virtual-modules/node_modules/debug/src/common.js",
    "line": "  createDebug.enable(createDebug.load());",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/webpack-virtual-modules/node_modules/debug/src/node.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-01T22:57:44.591Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/websocket/node_modules/debug/src/browser.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2019-12-11T01:10:06.091Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/websocket/node_modules/debug/src/browser.js",
    "line": "exports.enable(load());",
    "reasonCategory": "falseMatch",
    "updated": "2019-12-11T01:10:06.091Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/websocket/node_modules/debug/src/node.js",
    "line": "function load() {",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-21T00:36:11.618Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "jQuery-load(",
    "path": "node_modules/websocket/node_modules/debug/src/node.js",
    "line": "exports.enable(load());",
    "reasonCategory": "falseMatch",
    "updated": "2020-10-21T00:36:11.618Z",
    "reasonDetail": "isn't jquery"
  },
  {
    "rule": "eval",
    "path": "node_modules/workerpool/dist/worker.js",
    "line": "var requireFoolWebpack = eval('typeof require !== \\'undefined\\'' + ' ? require' + ' : function (module) { throw new Error(\\'Module \" + module + \" not found.\\') }');",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-16T20:26:31.296Z",
    "reasonDetail": "Dev-only dependency."
  },
  {
    "rule": "eval",
    "path": "node_modules/workerpool/dist/workerpool.js",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-16T20:26:31.296Z",
    "reasonDetail": "Dev-only dependency."
  },
  {
    "rule": "eval",
    "path": "node_modules/workerpool/dist/workerpool.js",
    "line": "var requireFoolWebpack = eval('typeof require !== \\'undefined\\' ' + '? require ' + ': function (module) { throw new Error(\\'Module \" + module + \" not found.\\') }');",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-16T20:26:31.296Z",
    "reasonDetail": "Dev-only dependency."
  },
  {
    "rule": "eval",
    "path": "node_modules/workerpool/dist/workerpool.js",
    "line": "var requireFoolWebpack = eval('typeof require !== \\'undefined\\'' + ' ? require' + ' : function (module) { throw new Error(\\'Module \" + module + \" not found.\\') }');",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-16T20:26:31.296Z",
    "reasonDetail": "Dev-only dependency."
  },
  {
    "rule": "eval",
    "path": "node_modules/workerpool/dist/workerpool.min.js",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-16T20:26:31.296Z",
    "reasonDetail": "Dev-only dependency."
  },
  {
    "rule": "eval",
    "path": "node_modules/workerpool/src/generated/embeddedWorker.js",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-16T20:26:31.296Z",
    "reasonDetail": "Dev-only dependency."
  },
  {
    "rule": "eval",
    "path": "node_modules/workerpool/src/requireFoolWebpack.js",
    "line": "var requireFoolWebpack = eval(",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-16T20:26:31.296Z",
    "reasonDetail": "Dev-only dependency."
  },
  {
    "rule": "eval",
    "path": "node_modules/workerpool/src/worker.js",
    "line": "var requireFoolWebpack = eval(",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-16T20:26:31.296Z",
    "reasonDetail": "Dev-only dependency."
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/xregexp/xregexp-all.js",
    "line": "            endAnchor = /\\$(?:\\(\\?:\\))?$/; // Trailing `$` or `$(?:)` (handles /x cruft)",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-19T21:59:32.770Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "node_modules/xregexp/xregexp-all.js",
    "line": "        replacementToken = /\\$(?:{([\\w$]+)}|(\\d\\d?|[\\s\\S]))/g,",
    "reasonCategory": "falseMatch",
    "updated": "2018-09-19T21:59:32.770Z"
  },
  {
    "rule": "React-useRef",
    "path": "sticker-creator/components/StickerFrame.js",
    "line": "  const timerRef = React.useRef();",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-14T01:19:45.446Z"
  },
  {
    "rule": "React-useRef",
    "path": "sticker-creator/components/StickerFrame.tsx",
    "line": "    const timerRef = React.useRef<number>();",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "sticker-creator/util/i18n.js",
    "line": "    const FIND_REPLACEMENTS = /\\$([^$]+)\\$/g;",
    "reasonCategory": "falseMatch",
    "updated": "2022-06-14T01:19:45.446Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "sticker-creator/util/i18n.tsx",
    "line": "    const FIND_REPLACEMENTS = /\\$([^$]+)\\$/g;",
    "reasonCategory": "falseMatch",
    "updated": "2020-07-21T18:34:59.251Z"
  },
  {
    "rule": "jQuery-html(",
    "path": "ts/backbone/views/whisper_view.ts",
    "line": "      this.$el.html(window.Mustache.render(template, attrs));",
    "reasonCategory": "usageTrusted",
    "updated": "2021-02-26T18:44:56.450Z",
    "reasonDetail": "Rendered template has been sanitized"
  },
  {
    "rule": "React-useRef",
    "path": "ts/calling/useGetCallingFrameBuffer.ts",
    "line": "  const ref = useRef<Buffer | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-12-10T23:24:03.829Z",
    "reasonDetail": "Doesn't touch the DOM."
  },
  {
    "rule": "jQuery-load(",
    "path": "ts/challenge.ts",
    "line": "// to the `ChallengeHandler` on `.load()` call (from `ts/background.ts`). They",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-05T23:11:22.692Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "ts/challenge.ts",
    "line": "  public async load(): Promise<void> {",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-05T23:11:22.692Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "ts/challenge.ts",
    "line": "        // 1. `.load()` when the `window.storage` is ready",
    "reasonCategory": "falseMatch",
    "updated": "2021-05-05T23:11:22.692Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/AvatarTextEditor.tsx",
    "line": "  const measureElRef = useRef<null | HTMLDivElement>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-08-04T18:18:09.236Z",
    "reasonDetail": "Only used for measurement. Doesn't modify the DOM."
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/AvatarTextEditor.tsx",
    "line": "  const inputRef = useRef<HTMLInputElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-08-04T22:02:17.074Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/AvatarTextEditor.tsx",
    "line": "  const onDoneRef = useRef<DoneHandleType>(onDone);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-08-05T23:40:55.699Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/AvatarUploadButton.tsx",
    "line": "  const fileInputRef = useRef<null | HTMLInputElement>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-08-03T21:17:38.615Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/BackboneHost.tsx",
    "line": "  const hostRef = useRef<HTMLDivElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/BackboneHost.tsx",
    "line": "  const viewRef = useRef<Backbone.View | undefined>(undefined);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/CallNeedPermissionScreen.tsx",
    "line": "  const autoCloseAtRef = useRef<number>(Date.now() + AUTO_CLOSE_MS);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/CallScreen.tsx",
    "line": "  const localVideoRef = useRef<HTMLVideoElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-12-01T01:31:12.757Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/CallingLobby.tsx",
    "line": "  const localVideoRef = React.useRef<null | HTMLVideoElement>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/CallingPip.tsx",
    "line": "  const localVideoRef = React.useRef(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2020-10-26T19:12:24.410Z",
    "reasonDetail": "Used to get the local video element for rendering."
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/CallingPip.tsx",
    "line": "  const videoContainerRef = React.useRef<null | HTMLDivElement>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/CallingToastManager.tsx",
    "line": "  const timeoutRef = useRef<NodeJS.Timeout | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/CaptchaDialog.tsx",
    "line": "  const buttonRef = useRef<HTMLButtonElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/ChatColorPicker.tsx",
    "line": "  const menuRef = useRef<any | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/CompositionArea.tsx",
    "line": "  const inputApiRef = useRef<InputApi | undefined>();",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-23T00:07:11.885Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/CompositionArea.tsx",
    "line": "  const fileInputRef = useRef<null | HTMLInputElement>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-23T00:07:11.885Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/CompositionArea.tsx",
    "line": "  const emojiButtonRef = useRef<EmojiButtonAPI | undefined>();",
    "reasonCategory": "usageTrusted",
    "updated": "2022-07-07T20:51:44.602Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/CompositionInput.tsx",
    "line": "  const callbacksRef = React.useRef(unstaleCallbacks);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-04-21T21:35:38.757Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/CompositionInput.tsx",
    "line": "  const emojiCompletionRef = React.useRef<EmojiCompletion>();",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/CompositionInput.tsx",
    "line": "  const mentionCompletionRef = React.useRef<MentionCompletion>();",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/CompositionInput.tsx",
    "line": "  const quillRef = React.useRef<Quill>();",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/CompositionInput.tsx",
    "line": "  const scrollerRef = React.useRef<HTMLDivElement>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/CompositionInput.tsx",
    "line": "  const propsRef = React.useRef<Props>(props);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/CompositionInput.tsx",
    "line": "  const memberRepositoryRef = React.useRef<MemberRepository>(",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/CompositionInput.tsx",
    "line": "  const canSendRef = React.useRef<boolean>(false);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-25T00:06:19.860Z",
    "reasonDetail": "Not used for DOM manipulation"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/ContactPills.tsx",
    "line": "  const elRef = useRef<null | HTMLDivElement>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/ConversationList.tsx",
    "line": "  const listRef = useRef<null | List>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/DirectCallRemoteParticipant.tsx",
    "line": "  const remoteVideoRef = useRef<HTMLCanvasElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/ForwardMessageModal.tsx",
    "line": "  const inputRef = useRef<null | HTMLInputElement>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/ForwardMessageModal.tsx",
    "line": "  const inputApiRef = React.useRef<InputApi | undefined>();",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/GradientDial.tsx",
    "line": "  const containerRef = useRef<HTMLDivElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/GroupCallOverflowArea.tsx",
    "line": "  const overflowRef = useRef<HTMLDivElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/GroupCallRemoteParticipant.tsx",
    "line": "    const lastReceivedVideoAt = useRef(-Infinity);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-06-17T20:46:02.342Z",
    "reasonDetail": "Doesn't reference the DOM."
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/GroupCallRemoteParticipant.tsx",
    "line": "    const remoteVideoRef = useRef<HTMLCanvasElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/GroupCallRemoteParticipant.tsx",
    "line": "    const canvasContextRef = useRef<CanvasRenderingContext2D | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/GroupCallRemoteParticipant.tsx",
    "line": "    const imageDataRef = useRef<ImageData | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-12-10T23:24:31.237Z",
    "reasonDetail": "Doesn't touch the DOM."
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/Inbox.tsx",
    "line": "  const conversationMountRef = useRef<HTMLDivElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-15T01:24:12.761Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/Inbox.tsx",
    "line": "  const conversationViewRef = useRef<ConversationView | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-15T01:24:12.761Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/IncomingCallBar.tsx",
    "line": "  const initialTitleRef = useRef<string>(title);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-08-16T20:52:11.043Z",
    "reasonDetail": "Doesn't interact with the DOM."
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/Input.tsx",
    "line": "    const innerRef = useRef<HTMLInputElement | HTMLTextAreaElement | null>(",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/Input.tsx",
    "line": "    const valueOnKeydownRef = useRef<string>(value);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/Input.tsx",
    "line": "    const selectionStartOnKeydownRef = useRef<number>(value.length);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "ts/components/Intl.tsx",
    "line": "    const FIND_REPLACEMENTS = /\\$([^$]+)\\$/g;",
    "reasonCategory": "falseMatch",
    "updated": "2020-07-21T18:34:59.251Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/LeftPaneSearchInput.tsx",
    "line": "  const inputRef = useRef<null | HTMLInputElement>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-02-11T20:49:03.879Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/Lightbox.tsx",
    "line": "  const containerRef = useRef<HTMLDivElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-08-23T18:39:37.081Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/Lightbox.tsx",
    "line": "  const imageRef = useRef<HTMLImageElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-24T00:03:36.061Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/Lightbox.tsx",
    "line": "  const animateRef = useRef<HTMLDivElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-10-11T21:21:08.188Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/Lightbox.tsx",
    "line": "  const dragCacheRef = useRef<",
    "reasonCategory": "usageTrusted",
    "updated": "2021-10-11T21:21:08.188Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/Lightbox.tsx",
    "line": "  const zoomCacheRef = useRef<",
    "reasonCategory": "usageTrusted",
    "updated": "2021-10-11T21:21:08.188Z"
  },
  {
    "rule": "React-createRef",
    "path": "ts/components/MainHeader.tsx",
    "line": "  public containerRef: React.RefObject<HTMLDivElement> = React.createRef();",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-14T22:04:43.988Z",
    "reasonDetail": "Handling outside click"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/MediaQualitySelector.tsx",
    "line": "  const buttonRef = React.useRef<HTMLButtonElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-14T22:04:43.988Z",
    "reasonDetail": "Handling outside click"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/Modal.tsx",
    "line": "  const modalRef = useRef<HTMLDivElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-08-05T00:22:31.660Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/Modal.tsx",
    "line": "  const bodyRef = useRef<HTMLDivElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-21T01:40:08.534Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/ProfileEditor.tsx",
    "line": "  const focusInputRef = useRef<HTMLInputElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/QrCode.tsx",
    "line": "  const elRef = useRef<null | HTMLImageElement>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-01-04T21:43:17.517Z",
    "reasonDetail": "Used to change the style in non-production builds."
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/Slider.tsx",
    "line": "  const diff = useRef<number>(0);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/Slider.tsx",
    "line": "  const handleRef = useRef<HTMLDivElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/Slider.tsx",
    "line": "  const sliderRef = useRef<HTMLDivElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/StandaloneRegistration.tsx",
    "line": "  const pluginRef = useRef<Plugin | undefined>();",
    "reasonCategory": "usageTrusted",
    "updated": "2021-11-24T20:55:14.943Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/StandaloneRegistration.tsx",
    "line": "  const elemRef = useRef<HTMLInputElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-11-30T10:15:33.662Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/TextStoryCreator.tsx",
    "line": "  const textEditorRef = useRef<HTMLInputElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-16T23:23:32.306Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/StoryImage.tsx",
    "line": "  const videoRef = useRef<HTMLVideoElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-04-29T23:54:21.656Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/StoryViewer.tsx",
    "line": "  const unmountRef = useRef<boolean>(false);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-07-18T23:30:04.033Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/StoryViewsNRepliesModal.tsx",
    "line": "  const inputApiRef = useRef<InputApi | undefined>();",
    "reasonCategory": "usageTrusted",
    "updated": "2022-02-15T17:57:06.507Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/StoryViewsNRepliesModal.tsx",
    "line": "  const containerElementRef = useRef<HTMLDivElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-08-04T00:52:01.080Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/TextAttachment.tsx",
    "line": "  const linkPreview = useRef<HTMLDivElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-04-06T00:59:17.194Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/TextAttachment.tsx",
    "line": "  const textEditorRef = useRef<HTMLTextAreaElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-16T23:23:32.306Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/Tooltip.tsx",
    "line": "  const wrapperRef = React.useRef<HTMLSpanElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-createRef",
    "path": "ts/components/conversation/ConversationHeader.tsx",
    "line": "    this.menuTriggerRef = React.createRef();",
    "reasonCategory": "usageTrusted",
    "updated": "2020-05-20T20:10:43.540Z",
    "reasonDetail": "Used to reference popup menu"
  },
  {
    "rule": "React-createRef",
    "path": "ts/components/conversation/ConversationHeader.tsx",
    "line": "    this.headerRef = React.createRef();",
    "reasonCategory": "usageTrusted",
    "updated": "2021-01-18T22:24:05.937Z",
    "reasonDetail": "Used to reference popup menu boundaries element"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/conversation/GIF.tsx",
    "line": "  const videoRef = useRef<HTMLVideoElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/conversation/GroupDescription.tsx",
    "line": "  const textRef = useRef<HTMLDivElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-createRef",
    "path": "ts/components/conversation/InlineNotificationWrapper.tsx",
    "line": "  public focusRef: React.RefObject<HTMLDivElement> = React.createRef();",
    "reasonCategory": "usageTrusted",
    "updated": "2019-11-06T19:56:38.557Z",
    "reasonDetail": "Used to manage focus"
  },
  {
    "rule": "React-createRef",
    "path": "ts/components/conversation/Message.tsx",
    "line": "    React.createRef();",
    "reasonCategory": "usageTrusted",
    "updated": "2021-03-05T19:57:01.431Z",
    "reasonDetail": "Used for detecting clicks outside reaction viewer"
  },
  {
    "rule": "React-createRef",
    "path": "ts/components/conversation/Message.tsx",
    "line": "  public focusRef: React.RefObject<HTMLDivElement> = React.createRef();",
    "reasonCategory": "usageTrusted",
    "updated": "2021-03-05T19:57:01.431Z",
    "reasonDetail": "Used for managing focus only"
  },
  {
    "rule": "React-createRef",
    "path": "ts/components/conversation/Message.tsx",
    "line": "  public audioButtonRef: React.RefObject<HTMLButtonElement> = React.createRef();",
    "reasonCategory": "usageTrusted",
    "updated": "2021-03-05T19:57:01.431Z",
    "reasonDetail": "Used for propagating click from the Message to MessageAudio's button"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/conversation/MessageAudio.tsx",
    "line": "  const waveformRef = useRef<HTMLDivElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/conversation/Quote.tsx",
    "line": "  const imageRef = useRef(new Image());",
    "reasonCategory": "usageTrusted",
    "updated": "2021-01-20T21:30:08.430Z",
    "reasonDetail": "Doesn't touch the DOM."
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/conversation/conversation-details/AddGroupMembersModal/ChooseGroupMembersModal.tsx",
    "line": "  const inputRef = useRef<null | HTMLInputElement>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/conversation/conversation-details/EditConversationAttributesModal.tsx",
    "line": "  const focusDescriptionRef = useRef<undefined | boolean>(",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/conversation/conversation-details/EditConversationAttributesModal.tsx",
    "line": "  const startingTitleRef = useRef<string>(externalTitle);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/conversation/conversation-details/EditConversationAttributesModal.tsx",
    "line": "  const startingAvatarPathRef = useRef<undefined | string>(externalAvatarPath);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-createRef",
    "path": "ts/components/conversation/media-gallery/MediaGallery.tsx",
    "line": "  public readonly focusRef: React.RefObject<HTMLDivElement> = React.createRef();",
    "reasonCategory": "usageTrusted",
    "updated": "2019-11-01T22:46:33.013Z",
    "reasonDetail": "Used for setting focus only"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/emoji/EmojiButton.tsx",
    "line": "    const buttonRef = React.useRef<HTMLButtonElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-14T22:04:43.988Z",
    "reasonDetail": "Handling outside click"
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/installScreen/InstallScreenChoosingDeviceNameStep.tsx",
    "line": "  const hasFocusedRef = useRef<boolean>(false);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-12-06T23:07:28.947Z",
    "reasonDetail": "Doesn't touch the DOM."
  },
  {
    "rule": "React-useRef",
    "path": "ts/components/stickers/StickerButton.tsx",
    "line": "    const buttonRef = React.useRef<HTMLButtonElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2022-06-14T22:04:43.988Z",
    "reasonDetail": "Handling outside click"
  },
  {
    "rule": "React-useRef",
    "path": "ts/hooks/useIntersectionObserver.ts",
    "line": "  const unobserveRef = useRef<(() => unknown) | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-17T20:16:37.959Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/hooks/usePrevious.ts",
    "line": "  const previousValueRef = useRef<T>(initialValue);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-17T20:16:37.959Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/hooks/useRestoreFocus.ts",
    "line": "  const toFocusRef = React.useRef<HTMLElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/hooks/useRestoreFocus.ts",
    "line": "  const lastFocusedRef = React.useRef<HTMLElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-07-30T16:57:33.618Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/hooks/useRestoreFocus.ts",
    "line": "  const toFocusRef = React.useRef<HTMLElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-10-22T00:52:39.251Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/hooks/useRestoreFocus.ts",
    "line": "  const lastFocusedRef = React.useRef<HTMLElement | null>(null);",
    "reasonCategory": "usageTrusted",
    "updated": "2021-10-22T00:52:39.251Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "ts/jobs/conversationJobQueue.ts",
    "line": "    await window.ConversationController.load();",
    "reasonCategory": "falseMatch",
    "updated": "2021-12-15T19:58:28.089Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "ts/jobs/helpers/sendReaction.ts",
    "line": "  await window.ConversationController.load();",
    "reasonCategory": "falseMatch",
    "updated": "2021-11-04T16:14:03.477Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "ts/jobs/helpers/syncHelpers.ts",
    "line": "  await window.ConversationController.load();",
    "reasonCategory": "falseMatch",
    "updated": "2021-11-04T16:14:03.477Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "ts/logging/uploadDebugLog.ts",
    "line": "  form.append('key', uploadKey);",
    "reasonCategory": "falseMatch",
    "updated": "2020-12-17T18:08:07.752Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "ts/logging/uploadDebugLog.ts",
    "line": "      form.append(key, value);",
    "reasonCategory": "falseMatch",
    "updated": "2020-12-17T18:08:07.752Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "ts/logging/uploadDebugLog.ts",
    "line": "  form.append('Content-Type', contentType);",
    "reasonCategory": "falseMatch",
    "updated": "2020-12-17T18:08:07.752Z"
  },
  {
    "rule": "jQuery-append(",
    "path": "ts/logging/uploadDebugLog.ts",
    "line": "  form.append('file', contentBuffer, {",
    "reasonCategory": "falseMatch",
    "updated": "2020-12-17T18:08:07.752Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "ts/quill/signal-clipboard/index.ts",
    "line": "  return div.innerHTML;",
    "reasonCategory": "usageTrusted",
    "updated": "2020-11-06T17:43:07.381Z",
    "reasonDetail": "used for figuring out clipboard contents"
  },
  {
    "rule": "jQuery-load(",
    "path": "ts/state/ducks/app.ts",
    "line": "    await window.ConversationController.load();",
    "reasonCategory": "falseMatch",
    "updated": "2021-11-04T16:14:03.477Z"
  },
  {
    "rule": "React-useRef",
    "path": "ts/state/smart/InstallScreen.tsx",
    "line": "  const chooseDeviceNamePromiseWrapperRef = useRef(explodePromise<string>());",
    "reasonCategory": "usageTrusted",
    "updated": "2021-12-06T23:07:28.947Z",
    "reasonDetail": "Doesn't touch the DOM."
  },
  {
    "rule": "jQuery-load(",
    "path": "ts/types/Stickers.ts",
    "line": "export async function load(): Promise<void> {",
    "reasonCategory": "falseMatch",
    "updated": "2019-04-26T17:48:30.675Z"
  },
  {
    "rule": "jQuery-load(",
    "path": "ts/util/avatarDataToBytes.ts",
    "line": "  await font.load();",
    "reasonCategory": "usageTrusted",
    "updated": "2021-08-03T21:17:38.615Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "ts/util/createIPCEvents.tsx",
    "line": "      if ($('.dark-overlay').length) {",
    "reasonCategory": "usageTrusted",
    "updated": "2021-08-18T18:22:55.307Z",
    "reasonDetail": "Legacy code"
  },
  {
    "rule": "jQuery-$(",
    "path": "ts/util/createIPCEvents.tsx",
    "line": "      $(document.body).prepend('<div class=\"dark-overlay\"></div>');",
    "reasonCategory": "usageTrusted",
    "updated": "2021-08-18T18:22:55.307Z",
    "reasonDetail": "Legacy code"
  },
  {
    "rule": "jQuery-$(",
    "path": "ts/util/createIPCEvents.tsx",
    "line": "      $('.dark-overlay').on('click', () => $('.dark-overlay').remove());",
    "reasonCategory": "usageTrusted",
    "updated": "2021-08-18T18:22:55.307Z",
    "reasonDetail": "Legacy code"
  },
  {
    "rule": "jQuery-$(",
    "path": "ts/util/createIPCEvents.tsx",
    "line": "    removeDarkOverlay: () => $('.dark-overlay').remove(),",
    "reasonCategory": "usageTrusted",
    "updated": "2021-08-18T18:22:55.307Z",
    "reasonDetail": "Legacy code"
  },
  {
    "rule": "jQuery-prepend(",
    "path": "ts/util/createIPCEvents.tsx",
    "line": "      $(document.body).prepend('<div class=\"dark-overlay\"></div>');",
    "reasonCategory": "usageTrusted",
    "updated": "2021-08-18T18:22:55.307Z",
    "reasonDetail": "Legacy code"
  },
  {
    "rule": "jQuery-load(",
    "path": "ts/util/sendReceipts.ts",
    "line": "  await window.ConversationController.load();",
    "reasonCategory": "falseMatch",
    "updated": "2021-12-15T19:58:28.089Z"
  },
  {
    "rule": "jQuery-$(",
    "path": "ts/util/setupI18n.ts",
    "line": "    const FIND_REPLACEMENTS = /\\$([^$]+)\\$/g;",
    "reasonCategory": "falseMatch",
    "updated": "2021-09-17T21:51:57.475Z"
  },
  {
    "rule": "DOM-innerHTML",
    "path": "ts/windows/loading/start.ts",
    "line": "  message.innerHTML = window.SignalContext.i18n('optimizingApplication');",
    "reasonCategory": "usageTrusted",
    "updated": "2021-09-17T21:02:59.414Z"
  }
]
